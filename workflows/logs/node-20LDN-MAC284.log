[INFO ] 2020-05-28T11:30:21,370Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/irynatsimashenka/corda/cordapp-template-java/workflows ... {}
[INFO ] 2020-05-28T11:30:21,560Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-05-28T11:30:22,556Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-05-28T11:30:23,263Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2020-05-28T11:30:23,274Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-05-28T11:30:23,275Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-05-28T11:30:23,700Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-05-28T11:30:23,712Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2020-05-28T11:30:24,088Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-05-28T11:30:24,100Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-05-28T11:30:24,101Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2020-05-28T11:30:24,221Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-05-28T11:30:24,234Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-05-28T11:30:24,644Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2020-05-28T11:30:24,824Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-05-28T11:30:24,824Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-05-28T11:30:24,836Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-05-28T11:30:24,836Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-05-28T11:30:24,836Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-05-28T11:30:25,465Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-05-28T11:30:25,466Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-05-28T11:30:25,533Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-05-28T11:30:25,533Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts {}
[INFO ] 2020-05-28T11:30:25,557Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-05-28T11:30:25,557Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows {}
[INFO ] 2020-05-28T11:30:25,593Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-05-28T11:30:25,593Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-05-28T11:30:25,663Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T11:30:25,675Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-05-28T11:30:25,722Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:compileClasspath {}
[INFO ] 2020-05-28T11:30:25,755Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-05-28T11:30:25,755Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2020-05-28T11:30:25,765Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-05-28T11:30:25,777Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:annotationProcessor {}
[INFO ] 2020-05-28T11:30:25,778Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-05-28T11:30:25,788Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T11:30:25,788Z [Connection worker] internal.TestCordappImpl. - Task :contracts:processResources {}
[INFO ] 2020-05-28T11:30:25,799Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T11:30:25,799Z [Connection worker] internal.TestCordappImpl. - Task :contracts:classes {}
[INFO ] 2020-05-28T11:30:25,800Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T11:30:25,800Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-05-28T11:30:25,810Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:runtime {}
[INFO ] 2020-05-28T11:30:25,842Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-05-28T11:30:25,842Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-05-28T11:30:25,852Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-05-28T11:30:25,852Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-05-28T11:30:25,852Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-05-28T11:30:25,852Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-05-28T11:30:25,852Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-05-28T11:30:25,852Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T11:30:25,853Z [Connection worker] internal.TestCordappImpl. - Task :contracts:jar {}
[INFO ] 2020-05-28T11:30:25,863Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T11:30:25,863Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-05-28T11:30:25,873Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:compileClasspath {}
[INFO ] 2020-05-28T11:30:25,886Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-05-28T11:30:25,886Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2020-05-28T11:30:25,886Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-05-28T11:30:25,897Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:annotationProcessor {}
[INFO ] 2020-05-28T11:30:25,897Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-05-28T11:30:25,897Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T11:30:25,897Z [Connection worker] internal.TestCordappImpl. - Task :workflows:processResources {}
[INFO ] 2020-05-28T11:30:25,897Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T11:30:25,897Z [Connection worker] internal.TestCordappImpl. - Task :workflows:classes {}
[INFO ] 2020-05-28T11:30:25,897Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T11:30:25,897Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-05-28T11:30:25,898Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:runtime {}
[INFO ] 2020-05-28T11:30:25,918Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-05-28T11:30:25,918Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-05-28T11:30:25,928Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-05-28T11:30:25,929Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-05-28T11:30:25,929Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-05-28T11:30:25,929Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-05-28T11:30:25,929Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-05-28T11:30:25,929Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-05-28T11:30:25,929Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-05-28T11:30:25,929Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T11:30:25,929Z [Connection worker] internal.TestCordappImpl. - Task :workflows:jar {}
[INFO ] 2020-05-28T11:30:27,451Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T11:30:27,451Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-05-28T11:30:27,451Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows' {}
[INFO ] 2020-05-28T11:30:27,452Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-05-28T11:30:27,462Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-05-28T11:30:27,462Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/irynatsimashenka/corda/cordapp-template-java/.gradle {}
[INFO ] 2020-05-28T11:30:27,462Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-05-28T11:30:27,497Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2020-05-28T11:30:27,630Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200528-113017.161/nodes/0/cordapps] {}
[INFO ] 2020-05-28T11:30:27,634Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-113017.161/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-113017.161/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-05-28T11:30:27,639Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-113017.161/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2020-05-28T11:30:27,711Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-113017.161/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2020-05-28T11:30:28,267Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-05-28T11:30:28,296Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-05-28T11:30:28,342Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.PingFlow to initiate com.template.flows.PongFlow (version 1) {}
[INFO ] 2020-05-28T11:30:28,787Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-05-28T11:30:17.112Z
      epoch=1
  } {}
[INFO ] 2020-05-28T11:30:31,987Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:30:31,994Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200528-113017.161/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:30:31,994Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:30:32,025Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:30:32,100Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:30:32,104Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:30:34,014Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:30:34,859Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:30:34,861Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:30:34,864Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:30:34,864Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:30:34,933Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:30:34,982Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-05-28T11:30:34,998Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-05-28T11:30:34,998Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-05-28T11:30:35,205Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-05-28T11:30:35,210Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-05-28T11:30:35,210Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1590665435210) {}
[INFO ] 2020-05-28T11:30:35,214Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-05-28T11:30:35,412Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1590665435210) {}
[INFO ] 2020-05-28T11:30:35,523Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-05-28T11:30:35,563Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1590665435210) {}
[INFO ] 2020-05-28T11:30:35,652Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-05-28T11:30:35,709Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=B2C9B7C7C84DFEEBAF96CF39D6ADEC6A4188134F9DEC3E321B082797B8B7287F uploader=app filename=Template CorDapp {}
[INFO ] 2020-05-28T11:30:35,723Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-05-28T11:30:35,735Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-05-28T11:30:36,143Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1590665435210) {}
[INFO ] 2020-05-28T11:30:36,192Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1590665435210) {}
[INFO ] 2020-05-28T11:30:36,193Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-05-28T11:30:36,194Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1590665435210) {}
[INFO ] 2020-05-28T11:30:36,194Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-05-28T11:30:36,203Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200528-113017.161/nodes/1/cordapps] {}
[INFO ] 2020-05-28T11:30:36,203Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-113017.161/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-113017.161/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-05-28T11:30:36,203Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-113017.161/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2020-05-28T11:30:36,208Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-113017.161/nodes/1/cordapps/workflows-0.1.jar {}
[INFO ] 2020-05-28T11:30:36,230Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-05-28T11:30:36,230Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-05-28T11:30:36,247Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.PingFlow to initiate com.template.flows.PongFlow (version 1) {}
[INFO ] 2020-05-28T11:30:36,255Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-05-28T11:30:17.112Z
      epoch=1
  } {}
[INFO ] 2020-05-28T11:30:36,891Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:30:36,896Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200528-113017.161/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:30:36,897Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:30:36,955Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:30:36,963Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:30:36,963Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:30:37,184Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:30:37,199Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:30:37,200Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:30:37,202Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:30:37,202Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:30:37,316Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:30:37,324Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-05-28T11:30:37,326Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-05-28T11:30:37,326Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-05-28T11:30:37,407Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-05-28T11:30:37,408Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-05-28T11:30:37,423Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-05-28T11:30:37,423Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1590665437423) {}
[INFO ] 2020-05-28T11:30:37,426Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-05-28T11:30:37,432Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1590665437423) {}
[INFO ] 2020-05-28T11:30:37,438Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-05-28T11:30:37,440Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1590665437423) {}
[INFO ] 2020-05-28T11:30:37,443Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-05-28T11:30:37,460Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=B2C9B7C7C84DFEEBAF96CF39D6ADEC6A4188134F9DEC3E321B082797B8B7287F uploader=app filename=Template CorDapp {}
[INFO ] 2020-05-28T11:30:37,468Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1590665437423) {}
[INFO ] 2020-05-28T11:30:37,471Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1590665435210) {}
[INFO ] 2020-05-28T11:30:37,472Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-05-28T11:30:37,480Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1590665437423) {}
[INFO ] 2020-05-28T11:30:37,481Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-05-28T11:30:37,493Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1590665437423) {}
[INFO ] 2020-05-28T11:30:37,493Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-05-28T11:30:37,493Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1590665437423) {}
[INFO ] 2020-05-28T11:30:37,493Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-05-28T11:44:15,028Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/irynatsimashenka/corda/cordapp-template-java/workflows ... {}
[INFO ] 2020-05-28T11:44:15,203Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-05-28T11:44:16,119Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-05-28T11:44:16,857Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2020-05-28T11:44:16,872Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-05-28T11:44:16,872Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-05-28T11:44:17,317Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-05-28T11:44:17,329Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2020-05-28T11:44:17,736Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-05-28T11:44:17,736Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-05-28T11:44:17,736Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2020-05-28T11:44:17,876Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-05-28T11:44:17,887Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-05-28T11:44:18,414Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2020-05-28T11:44:18,596Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-05-28T11:44:18,597Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-05-28T11:44:18,617Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-05-28T11:44:18,618Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-05-28T11:44:18,618Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-05-28T11:44:19,272Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-05-28T11:44:19,272Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-05-28T11:44:19,361Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-05-28T11:44:19,361Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts {}
[INFO ] 2020-05-28T11:44:19,396Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-05-28T11:44:19,396Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows {}
[INFO ] 2020-05-28T11:44:19,432Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-05-28T11:44:19,432Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-05-28T11:44:19,513Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T11:44:19,525Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-05-28T11:44:19,569Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:compileClasspath {}
[INFO ] 2020-05-28T11:44:19,617Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-05-28T11:44:19,617Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2020-05-28T11:44:19,627Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-05-28T11:44:19,638Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:annotationProcessor {}
[INFO ] 2020-05-28T11:44:19,638Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-05-28T11:44:19,663Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T11:44:19,663Z [Connection worker] internal.TestCordappImpl. - Task :contracts:processResources {}
[INFO ] 2020-05-28T11:44:19,663Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T11:44:19,663Z [Connection worker] internal.TestCordappImpl. - Task :contracts:classes {}
[INFO ] 2020-05-28T11:44:19,663Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T11:44:19,663Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-05-28T11:44:19,676Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:runtime {}
[INFO ] 2020-05-28T11:44:19,718Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-05-28T11:44:19,718Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-05-28T11:44:19,729Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-05-28T11:44:19,729Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-05-28T11:44:19,729Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-05-28T11:44:19,729Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-05-28T11:44:19,729Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-05-28T11:44:19,742Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T11:44:19,742Z [Connection worker] internal.TestCordappImpl. - Task :contracts:jar {}
[INFO ] 2020-05-28T11:44:19,742Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T11:44:19,743Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-05-28T11:44:19,755Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:compileClasspath {}
[INFO ] 2020-05-28T11:44:19,767Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-05-28T11:44:19,767Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2020-05-28T11:44:19,778Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-05-28T11:44:19,778Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:annotationProcessor {}
[INFO ] 2020-05-28T11:44:19,778Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-05-28T11:44:19,778Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T11:44:19,778Z [Connection worker] internal.TestCordappImpl. - Task :workflows:processResources {}
[INFO ] 2020-05-28T11:44:19,778Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T11:44:19,789Z [Connection worker] internal.TestCordappImpl. - Task :workflows:classes {}
[INFO ] 2020-05-28T11:44:19,789Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T11:44:19,789Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-05-28T11:44:19,789Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:runtime {}
[INFO ] 2020-05-28T11:44:19,812Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-05-28T11:44:19,813Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-05-28T11:44:19,813Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-05-28T11:44:19,813Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-05-28T11:44:19,813Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-05-28T11:44:19,813Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-05-28T11:44:19,813Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-05-28T11:44:19,813Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-05-28T11:44:19,813Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-05-28T11:44:19,813Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T11:44:19,813Z [Connection worker] internal.TestCordappImpl. - Task :workflows:jar {}
[INFO ] 2020-05-28T11:44:21,335Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T11:44:21,347Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-05-28T11:44:21,347Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows' {}
[INFO ] 2020-05-28T11:44:21,347Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-05-28T11:44:21,348Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-05-28T11:44:21,358Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/irynatsimashenka/corda/cordapp-template-java/.gradle {}
[INFO ] 2020-05-28T11:44:21,358Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-05-28T11:44:21,386Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2020-05-28T11:44:21,514Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200528-114410.689/nodes/0/cordapps] {}
[INFO ] 2020-05-28T11:44:21,517Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-114410.689/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-114410.689/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-05-28T11:44:21,522Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-114410.689/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2020-05-28T11:44:21,591Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-114410.689/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2020-05-28T11:44:22,164Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-05-28T11:44:22,189Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-05-28T11:44:22,234Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.PingFlow to initiate com.template.flows.PongFlow (version 1) {}
[INFO ] 2020-05-28T11:44:22,690Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-05-28T11:44:10.629Z
      epoch=1
  } {}
[INFO ] 2020-05-28T11:44:26,545Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:44:26,549Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200528-114410.689/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:44:26,549Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:44:26,576Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:44:26,628Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:44:26,637Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:44:28,285Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:44:28,768Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:44:28,771Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:44:28,773Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:44:28,773Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:44:28,831Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:44:28,866Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-05-28T11:44:28,880Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-05-28T11:44:28,880Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-05-28T11:44:29,052Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-05-28T11:44:29,058Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-05-28T11:44:29,058Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1590666269058) {}
[INFO ] 2020-05-28T11:44:29,061Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-05-28T11:44:29,169Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1590666269058) {}
[INFO ] 2020-05-28T11:44:29,211Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-05-28T11:44:29,224Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1590666269058) {}
[INFO ] 2020-05-28T11:44:29,253Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-05-28T11:44:29,276Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=B2C9B7C7C84DFEEBAF96CF39D6ADEC6A4188134F9DEC3E321B082797B8B7287F uploader=app filename=Template CorDapp {}
[INFO ] 2020-05-28T11:44:29,280Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-05-28T11:44:29,283Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-05-28T11:44:29,585Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1590666269058) {}
[INFO ] 2020-05-28T11:44:29,606Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1590666269058) {}
[INFO ] 2020-05-28T11:44:29,607Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-05-28T11:44:29,607Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1590666269058) {}
[INFO ] 2020-05-28T11:44:29,607Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-05-28T11:44:29,614Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200528-114410.689/nodes/1/cordapps] {}
[INFO ] 2020-05-28T11:44:29,614Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-114410.689/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-114410.689/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-05-28T11:44:29,614Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-114410.689/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2020-05-28T11:44:29,618Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-114410.689/nodes/1/cordapps/workflows-0.1.jar {}
[INFO ] 2020-05-28T11:44:29,636Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-05-28T11:44:29,637Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-05-28T11:44:29,656Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.PingFlow to initiate com.template.flows.PongFlow (version 1) {}
[INFO ] 2020-05-28T11:44:29,665Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-05-28T11:44:10.629Z
      epoch=1
  } {}
[INFO ] 2020-05-28T11:44:30,425Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:44:30,427Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200528-114410.689/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:44:30,427Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:44:30,445Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:44:30,447Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:44:30,447Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:44:30,649Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:44:30,664Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:44:30,666Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:44:30,668Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:44:30,668Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:44:30,770Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:44:30,786Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-05-28T11:44:30,789Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-05-28T11:44:30,790Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-05-28T11:44:31,002Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-05-28T11:44:31,004Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-05-28T11:44:31,058Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-05-28T11:44:31,058Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1590666271058) {}
[INFO ] 2020-05-28T11:44:31,063Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-05-28T11:44:31,086Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1590666271058) {}
[INFO ] 2020-05-28T11:44:31,106Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-05-28T11:44:31,114Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1590666271058) {}
[INFO ] 2020-05-28T11:44:31,132Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-05-28T11:44:31,164Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=B2C9B7C7C84DFEEBAF96CF39D6ADEC6A4188134F9DEC3E321B082797B8B7287F uploader=app filename=Template CorDapp {}
[INFO ] 2020-05-28T11:44:31,193Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1590666271058) {}
[INFO ] 2020-05-28T11:44:31,197Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1590666269058) {}
[INFO ] 2020-05-28T11:44:31,199Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-05-28T11:44:31,213Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1590666271058) {}
[INFO ] 2020-05-28T11:44:31,215Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-05-28T11:44:31,230Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1590666271058) {}
[INFO ] 2020-05-28T11:44:31,230Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-05-28T11:44:31,230Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1590666271058) {}
[INFO ] 2020-05-28T11:44:31,230Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-05-28T11:45:54,277Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/irynatsimashenka/corda/cordapp-template-java/workflows ... {}
[INFO ] 2020-05-28T11:45:54,439Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-05-28T11:45:55,379Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-05-28T11:45:56,073Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2020-05-28T11:45:56,085Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-05-28T11:45:56,086Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-05-28T11:45:56,512Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-05-28T11:45:56,524Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2020-05-28T11:45:56,905Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-05-28T11:45:56,905Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-05-28T11:45:56,905Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2020-05-28T11:45:57,034Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-05-28T11:45:57,047Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-05-28T11:45:57,446Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2020-05-28T11:45:57,624Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-05-28T11:45:57,624Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-05-28T11:45:57,648Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-05-28T11:45:57,648Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-05-28T11:45:57,649Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-05-28T11:45:58,237Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-05-28T11:45:58,237Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-05-28T11:45:58,324Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-05-28T11:45:58,324Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts {}
[INFO ] 2020-05-28T11:45:58,344Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-05-28T11:45:58,344Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows {}
[INFO ] 2020-05-28T11:45:58,387Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-05-28T11:45:58,387Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-05-28T11:45:58,466Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T11:45:58,492Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-05-28T11:45:58,535Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:compileClasspath {}
[INFO ] 2020-05-28T11:45:58,567Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-05-28T11:45:58,567Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2020-05-28T11:45:58,577Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-05-28T11:45:58,589Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:annotationProcessor {}
[INFO ] 2020-05-28T11:45:58,589Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-05-28T11:45:58,600Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T11:45:58,600Z [Connection worker] internal.TestCordappImpl. - Task :contracts:processResources {}
[INFO ] 2020-05-28T11:45:58,611Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T11:45:58,611Z [Connection worker] internal.TestCordappImpl. - Task :contracts:classes {}
[INFO ] 2020-05-28T11:45:58,611Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T11:45:58,611Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-05-28T11:45:58,621Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:runtime {}
[INFO ] 2020-05-28T11:45:58,653Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-05-28T11:45:58,653Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-05-28T11:45:58,666Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-05-28T11:45:58,666Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-05-28T11:45:58,666Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-05-28T11:45:58,666Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-05-28T11:45:58,666Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-05-28T11:45:58,666Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T11:45:58,678Z [Connection worker] internal.TestCordappImpl. - Task :contracts:jar {}
[INFO ] 2020-05-28T11:45:58,678Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T11:45:58,678Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-05-28T11:45:58,689Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:compileClasspath {}
[INFO ] 2020-05-28T11:45:58,710Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-05-28T11:45:58,711Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2020-05-28T11:45:58,711Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-05-28T11:45:58,711Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:annotationProcessor {}
[INFO ] 2020-05-28T11:45:58,711Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-05-28T11:45:58,711Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T11:45:58,711Z [Connection worker] internal.TestCordappImpl. - Task :workflows:processResources {}
[INFO ] 2020-05-28T11:45:58,722Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T11:45:58,722Z [Connection worker] internal.TestCordappImpl. - Task :workflows:classes {}
[INFO ] 2020-05-28T11:45:58,722Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T11:45:58,722Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-05-28T11:45:58,722Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:runtime {}
[INFO ] 2020-05-28T11:45:58,744Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-05-28T11:45:58,744Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-05-28T11:45:58,744Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-05-28T11:45:58,744Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-05-28T11:45:58,746Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-05-28T11:45:58,746Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-05-28T11:45:58,746Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-05-28T11:45:58,746Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-05-28T11:45:58,746Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-05-28T11:45:58,746Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T11:45:58,746Z [Connection worker] internal.TestCordappImpl. - Task :workflows:jar {}
[INFO ] 2020-05-28T11:46:00,270Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T11:46:00,270Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-05-28T11:46:00,270Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows' {}
[INFO ] 2020-05-28T11:46:00,270Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-05-28T11:46:00,271Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-05-28T11:46:00,281Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/irynatsimashenka/corda/cordapp-template-java/.gradle {}
[INFO ] 2020-05-28T11:46:00,281Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-05-28T11:46:00,303Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2020-05-28T11:46:00,422Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200528-114550.132/nodes/0/cordapps] {}
[INFO ] 2020-05-28T11:46:00,426Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-114550.132/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-114550.132/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-05-28T11:46:00,431Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-114550.132/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2020-05-28T11:46:00,495Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-114550.132/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2020-05-28T11:46:01,049Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-05-28T11:46:01,074Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-05-28T11:46:01,118Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.PingFlow to initiate com.template.flows.PongFlow (version 1) {}
[INFO ] 2020-05-28T11:46:01,559Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-05-28T11:45:50.081Z
      epoch=1
  } {}
[INFO ] 2020-05-28T11:46:04,527Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:46:04,530Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200528-114550.132/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:46:04,530Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:46:04,557Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:46:04,614Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:46:04,618Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:46:06,131Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:46:06,612Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:46:06,614Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:46:06,618Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:46:06,618Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:46:06,674Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:46:06,708Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-05-28T11:46:06,721Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-05-28T11:46:06,721Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-05-28T11:46:06,882Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-05-28T11:46:06,888Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-05-28T11:46:06,888Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1590666366888) {}
[INFO ] 2020-05-28T11:46:06,891Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-05-28T11:46:07,002Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1590666366888) {}
[INFO ] 2020-05-28T11:46:07,042Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-05-28T11:46:07,055Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1590666366888) {}
[INFO ] 2020-05-28T11:46:07,081Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-05-28T11:46:07,104Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=B2C9B7C7C84DFEEBAF96CF39D6ADEC6A4188134F9DEC3E321B082797B8B7287F uploader=app filename=Template CorDapp {}
[INFO ] 2020-05-28T11:46:07,108Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-05-28T11:46:07,111Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-05-28T11:46:07,410Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1590666366888) {}
[INFO ] 2020-05-28T11:46:07,430Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1590666366888) {}
[INFO ] 2020-05-28T11:46:07,431Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-05-28T11:46:07,431Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1590666366888) {}
[INFO ] 2020-05-28T11:46:07,431Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-05-28T11:46:07,438Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200528-114550.132/nodes/1/cordapps] {}
[INFO ] 2020-05-28T11:46:07,438Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-114550.132/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-114550.132/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-05-28T11:46:07,438Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-114550.132/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2020-05-28T11:46:07,442Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-114550.132/nodes/1/cordapps/workflows-0.1.jar {}
[INFO ] 2020-05-28T11:46:07,459Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-05-28T11:46:07,459Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-05-28T11:46:07,478Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.PingFlow to initiate com.template.flows.PongFlow (version 1) {}
[INFO ] 2020-05-28T11:46:07,488Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-05-28T11:45:50.081Z
      epoch=1
  } {}
[INFO ] 2020-05-28T11:46:07,973Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:46:07,976Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200528-114550.132/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:46:07,976Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:46:08,012Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:46:08,015Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:46:08,015Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:46:08,182Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:46:08,201Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:46:08,203Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:46:08,206Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:46:08,206Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:46:08,310Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:46:08,319Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-05-28T11:46:08,321Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-05-28T11:46:08,321Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-05-28T11:46:08,410Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-05-28T11:46:08,411Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-05-28T11:46:08,425Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-05-28T11:46:08,425Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1590666368425) {}
[INFO ] 2020-05-28T11:46:08,426Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-05-28T11:46:08,433Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1590666368425) {}
[INFO ] 2020-05-28T11:46:08,438Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-05-28T11:46:08,440Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1590666368425) {}
[INFO ] 2020-05-28T11:46:08,443Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-05-28T11:46:08,458Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=B2C9B7C7C84DFEEBAF96CF39D6ADEC6A4188134F9DEC3E321B082797B8B7287F uploader=app filename=Template CorDapp {}
[INFO ] 2020-05-28T11:46:08,464Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1590666368425) {}
[INFO ] 2020-05-28T11:46:08,467Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1590666366888) {}
[INFO ] 2020-05-28T11:46:08,468Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-05-28T11:46:08,475Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1590666368425) {}
[INFO ] 2020-05-28T11:46:08,476Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-05-28T11:46:08,488Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1590666368425) {}
[INFO ] 2020-05-28T11:46:08,488Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-05-28T11:46:08,488Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1590666368425) {}
[INFO ] 2020-05-28T11:46:08,488Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-05-28T11:52:17,103Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/irynatsimashenka/corda/cordapp-template-java/workflows ... {}
[INFO ] 2020-05-28T11:52:17,271Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-05-28T11:52:18,268Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-05-28T11:52:18,960Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2020-05-28T11:52:18,972Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-05-28T11:52:18,972Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-05-28T11:52:19,392Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-05-28T11:52:19,404Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2020-05-28T11:52:19,777Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-05-28T11:52:19,777Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-05-28T11:52:19,777Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2020-05-28T11:52:19,902Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-05-28T11:52:19,912Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-05-28T11:52:20,304Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2020-05-28T11:52:20,547Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-05-28T11:52:20,547Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-05-28T11:52:20,559Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-05-28T11:52:20,559Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-05-28T11:52:20,559Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-05-28T11:52:21,180Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-05-28T11:52:21,180Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-05-28T11:52:21,262Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-05-28T11:52:21,262Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts {}
[INFO ] 2020-05-28T11:52:21,294Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-05-28T11:52:21,294Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows {}
[INFO ] 2020-05-28T11:52:21,360Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-05-28T11:52:21,371Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-05-28T11:52:21,482Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T11:52:21,533Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-05-28T11:52:21,566Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:compileClasspath {}
[INFO ] 2020-05-28T11:52:21,618Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-05-28T11:52:21,619Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2020-05-28T11:52:21,619Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-05-28T11:52:21,640Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:annotationProcessor {}
[INFO ] 2020-05-28T11:52:21,640Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-05-28T11:52:21,650Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T11:52:21,650Z [Connection worker] internal.TestCordappImpl. - Task :contracts:processResources {}
[INFO ] 2020-05-28T11:52:21,663Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T11:52:21,663Z [Connection worker] internal.TestCordappImpl. - Task :contracts:classes {}
[INFO ] 2020-05-28T11:52:21,663Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T11:52:21,663Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-05-28T11:52:21,675Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:runtime {}
[INFO ] 2020-05-28T11:52:21,707Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-05-28T11:52:21,707Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-05-28T11:52:21,718Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-05-28T11:52:21,718Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-05-28T11:52:21,718Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-05-28T11:52:21,718Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-05-28T11:52:21,718Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-05-28T11:52:21,718Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T11:52:21,729Z [Connection worker] internal.TestCordappImpl. - Task :contracts:jar {}
[INFO ] 2020-05-28T11:52:21,740Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T11:52:21,740Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-05-28T11:52:21,751Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:compileClasspath {}
[INFO ] 2020-05-28T11:52:21,797Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-05-28T11:52:21,797Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2020-05-28T11:52:21,809Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-05-28T11:52:21,809Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:annotationProcessor {}
[INFO ] 2020-05-28T11:52:21,809Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-05-28T11:52:21,819Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T11:52:21,820Z [Connection worker] internal.TestCordappImpl. - Task :workflows:processResources {}
[INFO ] 2020-05-28T11:52:21,830Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T11:52:21,831Z [Connection worker] internal.TestCordappImpl. - Task :workflows:classes {}
[INFO ] 2020-05-28T11:52:21,831Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T11:52:21,832Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-05-28T11:52:21,841Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:runtime {}
[INFO ] 2020-05-28T11:52:21,896Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-05-28T11:52:21,896Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-05-28T11:52:21,909Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-05-28T11:52:21,909Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-05-28T11:52:21,910Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-05-28T11:52:21,910Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-05-28T11:52:21,910Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-05-28T11:52:21,910Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-05-28T11:52:21,910Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-05-28T11:52:21,910Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T11:52:21,910Z [Connection worker] internal.TestCordappImpl. - Task :workflows:jar {}
[INFO ] 2020-05-28T11:52:23,712Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T11:52:23,712Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-05-28T11:52:23,723Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows' {}
[INFO ] 2020-05-28T11:52:23,724Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-05-28T11:52:23,729Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-05-28T11:52:23,742Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/irynatsimashenka/corda/cordapp-template-java/.gradle {}
[INFO ] 2020-05-28T11:52:23,742Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-05-28T11:52:23,794Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2020-05-28T11:52:24,086Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200528-115212.978/nodes/0/cordapps] {}
[INFO ] 2020-05-28T11:52:24,096Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-115212.978/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-115212.978/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-05-28T11:52:24,115Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-115212.978/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2020-05-28T11:52:24,276Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-115212.978/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2020-05-28T11:52:24,994Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-05-28T11:52:25,019Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-05-28T11:52:25,070Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.PingFlow to initiate com.template.flows.PongFlow (version 1) {}
[INFO ] 2020-05-28T11:52:25,526Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-05-28T11:52:12.926Z
      epoch=1
  } {}
[INFO ] 2020-05-28T11:52:29,236Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:52:29,252Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200528-115212.978/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:52:29,252Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:52:29,299Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:52:29,361Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:52:29,365Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:52:31,235Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:52:31,722Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:52:31,724Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:52:31,729Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:52:31,729Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:52:31,785Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:52:31,824Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-05-28T11:52:31,839Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-05-28T11:52:31,839Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-05-28T11:52:32,008Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-05-28T11:52:32,014Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-05-28T11:52:32,014Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1590666752014) {}
[INFO ] 2020-05-28T11:52:32,017Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-05-28T11:52:32,130Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1590666752014) {}
[INFO ] 2020-05-28T11:52:32,170Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-05-28T11:52:32,183Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1590666752014) {}
[INFO ] 2020-05-28T11:52:32,209Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-05-28T11:52:32,230Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=B2C9B7C7C84DFEEBAF96CF39D6ADEC6A4188134F9DEC3E321B082797B8B7287F uploader=app filename=Template CorDapp {}
[INFO ] 2020-05-28T11:52:32,235Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-05-28T11:52:32,237Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-05-28T11:52:32,545Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1590666752014) {}
[INFO ] 2020-05-28T11:52:32,566Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1590666752014) {}
[INFO ] 2020-05-28T11:52:32,567Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-05-28T11:52:32,567Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1590666752014) {}
[INFO ] 2020-05-28T11:52:32,567Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-05-28T11:52:32,574Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200528-115212.978/nodes/1/cordapps] {}
[INFO ] 2020-05-28T11:52:32,574Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-115212.978/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-115212.978/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-05-28T11:52:32,574Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-115212.978/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2020-05-28T11:52:32,578Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-115212.978/nodes/1/cordapps/workflows-0.1.jar {}
[INFO ] 2020-05-28T11:52:32,596Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-05-28T11:52:32,596Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-05-28T11:52:32,619Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.PingFlow to initiate com.template.flows.PongFlow (version 1) {}
[INFO ] 2020-05-28T11:52:32,621Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-05-28T11:52:12.926Z
      epoch=1
  } {}
[INFO ] 2020-05-28T11:52:33,106Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:52:33,108Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200528-115212.978/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:52:33,108Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:52:33,124Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:52:33,126Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:52:33,126Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:52:33,304Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:52:33,318Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:52:33,319Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:52:33,322Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:52:33,322Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:52:33,406Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:52:33,416Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-05-28T11:52:33,418Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-05-28T11:52:33,419Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-05-28T11:52:33,538Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-05-28T11:52:33,539Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-05-28T11:52:33,557Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-05-28T11:52:33,557Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1590666753557) {}
[INFO ] 2020-05-28T11:52:33,562Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-05-28T11:52:33,571Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1590666753557) {}
[INFO ] 2020-05-28T11:52:33,581Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-05-28T11:52:33,584Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1590666753557) {}
[INFO ] 2020-05-28T11:52:33,593Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-05-28T11:52:33,627Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=B2C9B7C7C84DFEEBAF96CF39D6ADEC6A4188134F9DEC3E321B082797B8B7287F uploader=app filename=Template CorDapp {}
[INFO ] 2020-05-28T11:52:33,643Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1590666753557) {}
[INFO ] 2020-05-28T11:52:33,650Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1590666752014) {}
[INFO ] 2020-05-28T11:52:33,652Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-05-28T11:52:33,661Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1590666753557) {}
[INFO ] 2020-05-28T11:52:33,662Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-05-28T11:52:33,669Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1590666753557) {}
[INFO ] 2020-05-28T11:52:33,669Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-05-28T11:52:33,670Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1590666753557) {}
[INFO ] 2020-05-28T11:52:33,670Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-05-28T11:53:07,191Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/irynatsimashenka/corda/cordapp-template-java/workflows ... {}
[INFO ] 2020-05-28T11:53:07,386Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-05-28T11:53:08,362Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2020-05-28T11:53:08,382Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-05-28T11:53:08,412Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-05-28T11:53:08,412Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2020-05-28T11:53:08,412Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-05-28T11:53:08,412Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-05-28T11:53:08,412Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2020-05-28T11:53:08,412Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-05-28T11:53:08,423Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-05-28T11:53:08,423Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2020-05-28T11:53:08,457Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-05-28T11:53:08,457Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-05-28T11:53:08,457Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-05-28T11:53:08,457Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-05-28T11:53:08,457Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-05-28T11:53:08,511Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-05-28T11:53:08,511Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-05-28T11:53:08,511Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-05-28T11:53:08,511Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts {}
[INFO ] 2020-05-28T11:53:08,511Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-05-28T11:53:08,511Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows {}
[INFO ] 2020-05-28T11:53:08,521Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-05-28T11:53:08,521Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-05-28T11:53:08,531Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T11:53:08,541Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-05-28T11:53:08,542Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:compileClasspath {}
[INFO ] 2020-05-28T11:53:08,562Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-05-28T11:53:08,562Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2020-05-28T11:53:08,572Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-05-28T11:53:08,573Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:annotationProcessor {}
[INFO ] 2020-05-28T11:53:08,573Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-05-28T11:53:08,573Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T11:53:08,573Z [Connection worker] internal.TestCordappImpl. - Task :contracts:processResources {}
[INFO ] 2020-05-28T11:53:08,583Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T11:53:08,584Z [Connection worker] internal.TestCordappImpl. - Task :contracts:classes {}
[INFO ] 2020-05-28T11:53:08,584Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T11:53:08,584Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-05-28T11:53:08,584Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:runtime {}
[INFO ] 2020-05-28T11:53:08,596Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-05-28T11:53:08,596Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-05-28T11:53:08,596Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-05-28T11:53:08,596Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-05-28T11:53:08,596Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-05-28T11:53:08,596Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-05-28T11:53:08,606Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-05-28T11:53:08,606Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T11:53:08,606Z [Connection worker] internal.TestCordappImpl. - Task :contracts:jar {}
[INFO ] 2020-05-28T11:53:08,606Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T11:53:08,607Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-05-28T11:53:08,617Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:compileClasspath {}
[INFO ] 2020-05-28T11:53:08,627Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-05-28T11:53:08,628Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2020-05-28T11:53:08,628Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-05-28T11:53:08,628Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:annotationProcessor {}
[INFO ] 2020-05-28T11:53:08,628Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-05-28T11:53:08,628Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T11:53:08,628Z [Connection worker] internal.TestCordappImpl. - Task :workflows:processResources {}
[INFO ] 2020-05-28T11:53:08,639Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T11:53:08,639Z [Connection worker] internal.TestCordappImpl. - Task :workflows:classes {}
[INFO ] 2020-05-28T11:53:08,639Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T11:53:08,639Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-05-28T11:53:08,639Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:runtime {}
[INFO ] 2020-05-28T11:53:08,649Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-05-28T11:53:08,649Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-05-28T11:53:08,650Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-05-28T11:53:08,650Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-05-28T11:53:08,650Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-05-28T11:53:08,650Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-05-28T11:53:08,650Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-05-28T11:53:08,650Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-05-28T11:53:08,650Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-05-28T11:53:08,650Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T11:53:08,660Z [Connection worker] internal.TestCordappImpl. - Task :workflows:jar {}
[INFO ] 2020-05-28T11:53:08,660Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T11:53:08,671Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-05-28T11:53:08,671Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows' {}
[INFO ] 2020-05-28T11:53:08,671Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-05-28T11:53:08,672Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-05-28T11:53:08,672Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/irynatsimashenka/corda/cordapp-template-java/.gradle {}
[INFO ] 2020-05-28T11:53:08,672Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-05-28T11:53:08,695Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2020-05-28T11:53:08,810Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200528-115303.087/nodes/0/cordapps] {}
[INFO ] 2020-05-28T11:53:08,814Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-115303.087/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-115303.087/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-05-28T11:53:08,819Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-115303.087/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2020-05-28T11:53:08,890Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-115303.087/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2020-05-28T11:53:09,399Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-05-28T11:53:09,426Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-05-28T11:53:09,471Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.PingFlow to initiate com.template.flows.PongFlow (version 1) {}
[INFO ] 2020-05-28T11:53:09,570Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-05-28T11:53:03.043Z
      epoch=1
  } {}
[INFO ] 2020-05-28T11:53:12,771Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:53:12,775Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200528-115303.087/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:53:12,775Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:53:12,796Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:53:12,838Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:53:12,841Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:53:14,333Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:53:14,801Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:53:14,802Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:53:14,805Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:53:14,805Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:53:14,863Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:53:14,894Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-05-28T11:53:14,908Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-05-28T11:53:14,908Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-05-28T11:53:15,081Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-05-28T11:53:15,087Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-05-28T11:53:15,087Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1590666795087) {}
[INFO ] 2020-05-28T11:53:15,090Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-05-28T11:53:15,208Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1590666795087) {}
[INFO ] 2020-05-28T11:53:15,248Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-05-28T11:53:15,261Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1590666795087) {}
[INFO ] 2020-05-28T11:53:15,282Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-05-28T11:53:15,309Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=B2C9B7C7C84DFEEBAF96CF39D6ADEC6A4188134F9DEC3E321B082797B8B7287F uploader=app filename=Template CorDapp {}
[INFO ] 2020-05-28T11:53:15,314Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-05-28T11:53:15,316Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-05-28T11:53:15,605Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1590666795087) {}
[INFO ] 2020-05-28T11:53:15,626Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1590666795087) {}
[INFO ] 2020-05-28T11:53:15,627Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-05-28T11:53:15,627Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1590666795087) {}
[INFO ] 2020-05-28T11:53:15,627Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-05-28T11:53:15,635Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200528-115303.087/nodes/1/cordapps] {}
[INFO ] 2020-05-28T11:53:15,635Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-115303.087/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-115303.087/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-05-28T11:53:15,635Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-115303.087/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2020-05-28T11:53:15,644Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-115303.087/nodes/1/cordapps/workflows-0.1.jar {}
[INFO ] 2020-05-28T11:53:15,670Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-05-28T11:53:15,671Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-05-28T11:53:15,689Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.PingFlow to initiate com.template.flows.PongFlow (version 1) {}
[INFO ] 2020-05-28T11:53:15,691Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-05-28T11:53:03.043Z
      epoch=1
  } {}
[INFO ] 2020-05-28T11:53:16,172Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:53:16,174Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200528-115303.087/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:53:16,174Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:53:16,196Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:53:16,197Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:53:16,197Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:53:16,324Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:53:16,343Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:53:16,346Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:53:16,351Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:53:16,351Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:53:16,431Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:53:16,436Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-05-28T11:53:16,438Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-05-28T11:53:16,438Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-05-28T11:53:16,591Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-05-28T11:53:16,593Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-05-28T11:53:16,618Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-05-28T11:53:16,618Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1590666796618) {}
[INFO ] 2020-05-28T11:53:16,621Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-05-28T11:53:16,627Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1590666796618) {}
[INFO ] 2020-05-28T11:53:16,634Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-05-28T11:53:16,637Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1590666796618) {}
[INFO ] 2020-05-28T11:53:16,641Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-05-28T11:53:16,658Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=B2C9B7C7C84DFEEBAF96CF39D6ADEC6A4188134F9DEC3E321B082797B8B7287F uploader=app filename=Template CorDapp {}
[INFO ] 2020-05-28T11:53:16,666Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1590666796618) {}
[INFO ] 2020-05-28T11:53:16,669Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1590666795087) {}
[INFO ] 2020-05-28T11:53:16,670Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-05-28T11:53:16,679Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1590666796618) {}
[INFO ] 2020-05-28T11:53:16,680Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-05-28T11:53:16,688Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1590666796618) {}
[INFO ] 2020-05-28T11:53:16,688Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-05-28T11:53:16,688Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1590666796618) {}
[INFO ] 2020-05-28T11:53:16,688Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-05-28T11:56:48,486Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/irynatsimashenka/corda/cordapp-template-java/workflows ... {}
[INFO ] 2020-05-28T11:56:48,666Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-05-28T11:56:49,671Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-05-28T11:56:50,417Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2020-05-28T11:56:50,429Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-05-28T11:56:50,430Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-05-28T11:56:50,899Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-05-28T11:56:50,910Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2020-05-28T11:56:51,307Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-05-28T11:56:51,307Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-05-28T11:56:51,307Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2020-05-28T11:56:51,449Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-05-28T11:56:51,462Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-05-28T11:56:51,885Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2020-05-28T11:56:52,067Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-05-28T11:56:52,067Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-05-28T11:56:52,089Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-05-28T11:56:52,089Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-05-28T11:56:52,089Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-05-28T11:56:52,741Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-05-28T11:56:52,741Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-05-28T11:56:52,812Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-05-28T11:56:52,812Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts {}
[INFO ] 2020-05-28T11:56:52,834Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-05-28T11:56:52,834Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows {}
[INFO ] 2020-05-28T11:56:52,866Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-05-28T11:56:52,867Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-05-28T11:56:52,935Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T11:56:52,958Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-05-28T11:56:53,003Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:compileClasspath {}
[INFO ] 2020-05-28T11:56:53,047Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-05-28T11:56:53,047Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2020-05-28T11:56:53,047Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-05-28T11:56:53,069Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:annotationProcessor {}
[INFO ] 2020-05-28T11:56:53,069Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-05-28T11:56:53,079Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T11:56:53,079Z [Connection worker] internal.TestCordappImpl. - Task :contracts:processResources {}
[INFO ] 2020-05-28T11:56:53,091Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T11:56:53,092Z [Connection worker] internal.TestCordappImpl. - Task :contracts:classes {}
[INFO ] 2020-05-28T11:56:53,092Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T11:56:53,092Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-05-28T11:56:53,105Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:runtime {}
[INFO ] 2020-05-28T11:56:53,145Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-05-28T11:56:53,146Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-05-28T11:56:53,157Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-05-28T11:56:53,157Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-05-28T11:56:53,157Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-05-28T11:56:53,158Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-05-28T11:56:53,158Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-05-28T11:56:53,158Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T11:56:53,158Z [Connection worker] internal.TestCordappImpl. - Task :contracts:jar {}
[INFO ] 2020-05-28T11:56:53,168Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T11:56:53,169Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-05-28T11:56:53,179Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:compileClasspath {}
[INFO ] 2020-05-28T11:56:53,212Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-05-28T11:56:53,212Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2020-05-28T11:56:53,212Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-05-28T11:56:53,212Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:annotationProcessor {}
[INFO ] 2020-05-28T11:56:53,212Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-05-28T11:56:53,222Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T11:56:53,222Z [Connection worker] internal.TestCordappImpl. - Task :workflows:processResources {}
[INFO ] 2020-05-28T11:56:53,222Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T11:56:53,222Z [Connection worker] internal.TestCordappImpl. - Task :workflows:classes {}
[INFO ] 2020-05-28T11:56:53,222Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T11:56:53,222Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-05-28T11:56:53,223Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:runtime {}
[INFO ] 2020-05-28T11:56:53,244Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-05-28T11:56:53,246Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-05-28T11:56:53,246Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-05-28T11:56:53,246Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-05-28T11:56:53,246Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-05-28T11:56:53,246Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-05-28T11:56:53,246Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-05-28T11:56:53,246Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-05-28T11:56:53,246Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-05-28T11:56:53,246Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T11:56:53,246Z [Connection worker] internal.TestCordappImpl. - Task :workflows:jar {}
[INFO ] 2020-05-28T11:56:54,760Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T11:56:54,760Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-05-28T11:56:54,760Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows' {}
[INFO ] 2020-05-28T11:56:54,760Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-05-28T11:56:54,771Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-05-28T11:56:54,771Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/irynatsimashenka/corda/cordapp-template-java/.gradle {}
[INFO ] 2020-05-28T11:56:54,771Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-05-28T11:56:54,804Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2020-05-28T11:56:54,919Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200528-115644.276/nodes/0/cordapps] {}
[INFO ] 2020-05-28T11:56:54,923Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-115644.276/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-115644.276/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-05-28T11:56:54,928Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-115644.276/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2020-05-28T11:56:54,999Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-115644.276/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2020-05-28T11:56:55,552Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-05-28T11:56:55,577Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-05-28T11:56:55,620Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.PingFlow to initiate com.template.flows.PongFlow (version 1) {}
[INFO ] 2020-05-28T11:56:56,096Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-05-28T11:56:44.224Z
      epoch=1
  } {}
[INFO ] 2020-05-28T11:56:59,154Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:56:59,157Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200528-115644.276/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:56:59,157Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:56:59,181Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:56:59,256Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:56:59,261Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:57:00,790Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:57:01,261Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:57:01,263Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:57:01,266Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:57:01,266Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:57:01,318Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:57:01,354Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-05-28T11:57:01,367Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-05-28T11:57:01,367Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-05-28T11:57:01,524Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-05-28T11:57:01,530Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-05-28T11:57:01,530Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1590667021530) {}
[INFO ] 2020-05-28T11:57:01,533Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-05-28T11:57:01,639Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1590667021530) {}
[INFO ] 2020-05-28T11:57:01,679Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-05-28T11:57:01,692Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1590667021530) {}
[INFO ] 2020-05-28T11:57:01,721Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-05-28T11:57:01,743Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=B2C9B7C7C84DFEEBAF96CF39D6ADEC6A4188134F9DEC3E321B082797B8B7287F uploader=app filename=Template CorDapp {}
[INFO ] 2020-05-28T11:57:01,747Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-05-28T11:57:01,750Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-05-28T11:57:02,043Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1590667021530) {}
[INFO ] 2020-05-28T11:57:02,063Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1590667021530) {}
[INFO ] 2020-05-28T11:57:02,064Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-05-28T11:57:02,065Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1590667021530) {}
[INFO ] 2020-05-28T11:57:02,065Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-05-28T11:57:02,072Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200528-115644.276/nodes/1/cordapps] {}
[INFO ] 2020-05-28T11:57:02,072Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-115644.276/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-115644.276/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-05-28T11:57:02,072Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-115644.276/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2020-05-28T11:57:02,077Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-115644.276/nodes/1/cordapps/workflows-0.1.jar {}
[INFO ] 2020-05-28T11:57:02,096Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-05-28T11:57:02,097Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-05-28T11:57:02,123Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.PingFlow to initiate com.template.flows.PongFlow (version 1) {}
[INFO ] 2020-05-28T11:57:02,125Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-05-28T11:56:44.224Z
      epoch=1
  } {}
[INFO ] 2020-05-28T11:57:02,612Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:57:02,616Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200528-115644.276/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:57:02,616Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:57:02,648Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:57:02,653Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:57:02,653Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:57:02,897Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:57:02,921Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:57:02,924Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:57:02,927Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:57:02,927Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:57:02,988Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T11:57:02,992Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-05-28T11:57:02,994Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-05-28T11:57:02,994Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-05-28T11:57:03,158Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-05-28T11:57:03,159Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-05-28T11:57:03,177Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-05-28T11:57:03,177Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1590667023177) {}
[INFO ] 2020-05-28T11:57:03,180Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-05-28T11:57:03,186Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1590667023177) {}
[INFO ] 2020-05-28T11:57:03,191Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-05-28T11:57:03,193Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1590667023177) {}
[INFO ] 2020-05-28T11:57:03,197Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-05-28T11:57:03,213Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=B2C9B7C7C84DFEEBAF96CF39D6ADEC6A4188134F9DEC3E321B082797B8B7287F uploader=app filename=Template CorDapp {}
[INFO ] 2020-05-28T11:57:03,220Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1590667023177) {}
[INFO ] 2020-05-28T11:57:03,223Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1590667021530) {}
[INFO ] 2020-05-28T11:57:03,225Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-05-28T11:57:03,233Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1590667023177) {}
[INFO ] 2020-05-28T11:57:03,234Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-05-28T11:57:03,242Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1590667023177) {}
[INFO ] 2020-05-28T11:57:03,242Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-05-28T11:57:03,242Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1590667023177) {}
[INFO ] 2020-05-28T11:57:03,242Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-05-28T12:03:58,732Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/irynatsimashenka/corda/cordapp-template-java/workflows ... {}
[INFO ] 2020-05-28T12:03:58,887Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-05-28T12:03:59,729Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-05-28T12:04:00,403Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2020-05-28T12:04:00,414Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-05-28T12:04:00,414Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-05-28T12:04:00,833Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-05-28T12:04:00,843Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2020-05-28T12:04:01,219Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-05-28T12:04:01,231Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-05-28T12:04:01,231Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2020-05-28T12:04:01,358Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-05-28T12:04:01,358Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-05-28T12:04:01,768Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2020-05-28T12:04:01,943Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-05-28T12:04:01,954Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-05-28T12:04:01,967Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-05-28T12:04:01,968Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-05-28T12:04:01,968Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-05-28T12:04:02,534Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-05-28T12:04:02,534Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-05-28T12:04:02,617Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-05-28T12:04:02,617Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts {}
[INFO ] 2020-05-28T12:04:02,642Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-05-28T12:04:02,642Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows {}
[INFO ] 2020-05-28T12:04:02,676Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-05-28T12:04:02,676Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-05-28T12:04:02,751Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T12:04:02,776Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-05-28T12:04:02,808Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:compileClasspath {}
[INFO ] 2020-05-28T12:04:02,852Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-05-28T12:04:02,852Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2020-05-28T12:04:02,862Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-05-28T12:04:02,874Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:annotationProcessor {}
[INFO ] 2020-05-28T12:04:02,874Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-05-28T12:04:02,885Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T12:04:02,885Z [Connection worker] internal.TestCordappImpl. - Task :contracts:processResources {}
[INFO ] 2020-05-28T12:04:02,895Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T12:04:02,895Z [Connection worker] internal.TestCordappImpl. - Task :contracts:classes {}
[INFO ] 2020-05-28T12:04:02,895Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T12:04:02,895Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-05-28T12:04:02,917Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:runtime {}
[INFO ] 2020-05-28T12:04:02,937Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-05-28T12:04:02,938Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-05-28T12:04:02,959Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-05-28T12:04:02,959Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-05-28T12:04:02,959Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-05-28T12:04:02,959Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-05-28T12:04:02,959Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-05-28T12:04:02,959Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T12:04:02,959Z [Connection worker] internal.TestCordappImpl. - Task :contracts:jar {}
[INFO ] 2020-05-28T12:04:02,959Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T12:04:02,972Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-05-28T12:04:02,972Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:compileClasspath {}
[INFO ] 2020-05-28T12:04:02,995Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-05-28T12:04:02,995Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2020-05-28T12:04:02,995Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-05-28T12:04:03,005Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:annotationProcessor {}
[INFO ] 2020-05-28T12:04:03,005Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-05-28T12:04:03,005Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T12:04:03,005Z [Connection worker] internal.TestCordappImpl. - Task :workflows:processResources {}
[INFO ] 2020-05-28T12:04:03,017Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T12:04:03,017Z [Connection worker] internal.TestCordappImpl. - Task :workflows:classes {}
[INFO ] 2020-05-28T12:04:03,017Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T12:04:03,017Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-05-28T12:04:03,017Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:runtime {}
[INFO ] 2020-05-28T12:04:03,040Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-05-28T12:04:03,042Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-05-28T12:04:03,042Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-05-28T12:04:03,042Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-05-28T12:04:03,042Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-05-28T12:04:03,042Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-05-28T12:04:03,042Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-05-28T12:04:03,042Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-05-28T12:04:03,042Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-05-28T12:04:03,042Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T12:04:03,053Z [Connection worker] internal.TestCordappImpl. - Task :workflows:jar {}
[INFO ] 2020-05-28T12:04:04,576Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T12:04:04,576Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-05-28T12:04:04,576Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows' {}
[INFO ] 2020-05-28T12:04:04,576Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-05-28T12:04:04,589Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-05-28T12:04:04,589Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/irynatsimashenka/corda/cordapp-template-java/.gradle {}
[INFO ] 2020-05-28T12:04:04,589Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-05-28T12:04:04,612Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2020-05-28T12:04:04,724Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200528-120354.539/nodes/0/cordapps] {}
[INFO ] 2020-05-28T12:04:04,727Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-120354.539/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-120354.539/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-05-28T12:04:04,732Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-120354.539/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2020-05-28T12:04:04,796Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-120354.539/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2020-05-28T12:04:05,296Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-05-28T12:04:05,318Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-05-28T12:04:05,362Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.PingFlow to initiate com.template.flows.PongFlow (version 1) {}
[INFO ] 2020-05-28T12:04:05,717Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-05-28T12:03:54.488Z
      epoch=1
  } {}
[INFO ] 2020-05-28T12:04:08,725Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T12:04:08,733Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200528-120354.539/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T12:04:08,733Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T12:04:08,759Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T12:04:08,806Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T12:04:08,812Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T12:04:10,331Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T12:04:10,804Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T12:04:10,806Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T12:04:10,809Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T12:04:10,809Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T12:04:10,862Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T12:04:10,896Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-05-28T12:04:10,909Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-05-28T12:04:10,909Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-05-28T12:04:11,070Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-05-28T12:04:11,076Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-05-28T12:04:11,076Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1590667451076) {}
[INFO ] 2020-05-28T12:04:11,079Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-05-28T12:04:11,189Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1590667451076) {}
[INFO ] 2020-05-28T12:04:11,232Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-05-28T12:04:11,246Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1590667451076) {}
[INFO ] 2020-05-28T12:04:11,273Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-05-28T12:04:11,294Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=B2C9B7C7C84DFEEBAF96CF39D6ADEC6A4188134F9DEC3E321B082797B8B7287F uploader=app filename=Template CorDapp {}
[INFO ] 2020-05-28T12:04:11,298Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-05-28T12:04:11,301Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-05-28T12:04:11,597Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1590667451076) {}
[INFO ] 2020-05-28T12:04:11,618Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1590667451076) {}
[INFO ] 2020-05-28T12:04:11,619Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-05-28T12:04:11,619Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1590667451076) {}
[INFO ] 2020-05-28T12:04:11,619Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-05-28T12:04:11,626Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200528-120354.539/nodes/1/cordapps] {}
[INFO ] 2020-05-28T12:04:11,626Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-120354.539/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-120354.539/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-05-28T12:04:11,626Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-120354.539/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2020-05-28T12:04:11,631Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-120354.539/nodes/1/cordapps/workflows-0.1.jar {}
[INFO ] 2020-05-28T12:04:11,647Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-05-28T12:04:11,648Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-05-28T12:04:11,674Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.PingFlow to initiate com.template.flows.PongFlow (version 1) {}
[INFO ] 2020-05-28T12:04:11,676Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-05-28T12:03:54.488Z
      epoch=1
  } {}
[INFO ] 2020-05-28T12:04:12,188Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T12:04:12,192Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200528-120354.539/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T12:04:12,192Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T12:04:12,223Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T12:04:12,225Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T12:04:12,226Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T12:04:12,378Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T12:04:12,401Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T12:04:12,403Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T12:04:12,406Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T12:04:12,407Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T12:04:12,511Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T12:04:12,516Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-05-28T12:04:12,519Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-05-28T12:04:12,519Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-05-28T12:04:12,601Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-05-28T12:04:12,602Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-05-28T12:04:12,617Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-05-28T12:04:12,617Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1590667452617) {}
[INFO ] 2020-05-28T12:04:12,618Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-05-28T12:04:12,624Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1590667452617) {}
[INFO ] 2020-05-28T12:04:12,629Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-05-28T12:04:12,631Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1590667452617) {}
[INFO ] 2020-05-28T12:04:12,634Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-05-28T12:04:12,658Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=B2C9B7C7C84DFEEBAF96CF39D6ADEC6A4188134F9DEC3E321B082797B8B7287F uploader=app filename=Template CorDapp {}
[INFO ] 2020-05-28T12:04:12,672Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1590667452617) {}
[INFO ] 2020-05-28T12:04:12,678Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1590667451076) {}
[INFO ] 2020-05-28T12:04:12,681Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-05-28T12:04:12,697Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1590667452617) {}
[INFO ] 2020-05-28T12:04:12,699Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-05-28T12:04:12,725Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1590667452617) {}
[INFO ] 2020-05-28T12:04:12,725Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-05-28T12:04:12,726Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1590667452617) {}
[INFO ] 2020-05-28T12:04:12,726Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-05-28T15:13:23,954Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/irynatsimashenka/corda/cordapp-template-java/workflows ... {}
[INFO ] 2020-05-28T15:13:24,142Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-05-28T15:13:25,120Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-05-28T15:13:25,841Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2020-05-28T15:13:25,853Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-05-28T15:13:25,854Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-05-28T15:13:26,275Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-05-28T15:13:26,297Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2020-05-28T15:13:26,674Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-05-28T15:13:26,685Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-05-28T15:13:26,685Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2020-05-28T15:13:26,808Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-05-28T15:13:26,818Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-05-28T15:13:27,245Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2020-05-28T15:13:27,417Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-05-28T15:13:27,427Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-05-28T15:13:27,438Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-05-28T15:13:27,438Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-05-28T15:13:27,439Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-05-28T15:13:28,059Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-05-28T15:13:28,060Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-05-28T15:13:28,146Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-05-28T15:13:28,146Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts {}
[INFO ] 2020-05-28T15:13:28,167Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-05-28T15:13:28,167Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows {}
[INFO ] 2020-05-28T15:13:28,223Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-05-28T15:13:28,223Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-05-28T15:13:28,290Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T15:13:28,312Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-05-28T15:13:28,356Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:compileClasspath {}
[INFO ] 2020-05-28T15:13:28,409Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-05-28T15:13:28,409Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2020-05-28T15:13:28,409Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-05-28T15:13:28,421Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:annotationProcessor {}
[INFO ] 2020-05-28T15:13:28,421Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-05-28T15:13:28,442Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T15:13:28,443Z [Connection worker] internal.TestCordappImpl. - Task :contracts:processResources {}
[INFO ] 2020-05-28T15:13:28,443Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T15:13:28,443Z [Connection worker] internal.TestCordappImpl. - Task :contracts:classes {}
[INFO ] 2020-05-28T15:13:28,443Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T15:13:28,443Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-05-28T15:13:28,467Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:runtime {}
[INFO ] 2020-05-28T15:13:28,499Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-05-28T15:13:28,499Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-05-28T15:13:28,511Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-05-28T15:13:28,511Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-05-28T15:13:28,511Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-05-28T15:13:28,511Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-05-28T15:13:28,511Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-05-28T15:13:28,522Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T15:13:28,522Z [Connection worker] internal.TestCordappImpl. - Task :contracts:jar {}
[INFO ] 2020-05-28T15:13:28,532Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T15:13:28,532Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-05-28T15:13:28,532Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:compileClasspath {}
[INFO ] 2020-05-28T15:13:28,555Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-05-28T15:13:28,555Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2020-05-28T15:13:28,555Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-05-28T15:13:28,555Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:annotationProcessor {}
[INFO ] 2020-05-28T15:13:28,555Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-05-28T15:13:28,565Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T15:13:28,565Z [Connection worker] internal.TestCordappImpl. - Task :workflows:processResources {}
[INFO ] 2020-05-28T15:13:28,565Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T15:13:28,565Z [Connection worker] internal.TestCordappImpl. - Task :workflows:classes {}
[INFO ] 2020-05-28T15:13:28,565Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T15:13:28,565Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-05-28T15:13:28,565Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:runtime {}
[INFO ] 2020-05-28T15:13:28,608Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-05-28T15:13:28,608Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-05-28T15:13:28,619Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-05-28T15:13:28,619Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-05-28T15:13:28,619Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-05-28T15:13:28,619Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-05-28T15:13:28,619Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-05-28T15:13:28,619Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-05-28T15:13:28,619Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-05-28T15:13:28,619Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T15:13:28,621Z [Connection worker] internal.TestCordappImpl. - Task :workflows:jar {}
[INFO ] 2020-05-28T15:13:30,282Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T15:13:30,282Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-05-28T15:13:30,282Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows' {}
[INFO ] 2020-05-28T15:13:30,282Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-05-28T15:13:30,283Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-05-28T15:13:30,292Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/irynatsimashenka/corda/cordapp-template-java/.gradle {}
[INFO ] 2020-05-28T15:13:30,292Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-05-28T15:13:30,316Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2020-05-28T15:13:30,464Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200528-151319.361/nodes/0/cordapps] {}
[INFO ] 2020-05-28T15:13:30,467Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-151319.361/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-151319.361/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-05-28T15:13:30,473Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-151319.361/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2020-05-28T15:13:30,545Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-151319.361/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2020-05-28T15:13:31,193Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-05-28T15:13:31,227Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-05-28T15:13:31,278Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.PingFlow to initiate com.template.flows.PongFlow (version 1) {}
[INFO ] 2020-05-28T15:13:31,741Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-05-28T15:13:19.299Z
      epoch=1
  } {}
[INFO ] 2020-05-28T15:13:35,037Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:13:35,043Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200528-151319.361/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:13:35,043Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:13:35,073Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:13:35,141Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:13:35,146Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:13:36,960Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:13:37,518Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:13:37,520Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:13:37,525Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:13:37,525Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:13:37,608Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:13:37,647Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-05-28T15:13:37,663Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-05-28T15:13:37,663Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-05-28T15:13:37,846Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-05-28T15:13:37,852Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-05-28T15:13:37,852Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1590678817852) {}
[INFO ] 2020-05-28T15:13:37,856Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-05-28T15:13:37,976Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1590678817852) {}
[INFO ] 2020-05-28T15:13:38,020Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-05-28T15:13:38,037Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1590678817852) {}
[INFO ] 2020-05-28T15:13:38,057Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-05-28T15:13:38,092Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=B2C9B7C7C84DFEEBAF96CF39D6ADEC6A4188134F9DEC3E321B082797B8B7287F uploader=app filename=Template CorDapp {}
[INFO ] 2020-05-28T15:13:38,097Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-05-28T15:13:38,099Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-05-28T15:13:38,473Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1590678817852) {}
[INFO ] 2020-05-28T15:13:38,494Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1590678817852) {}
[INFO ] 2020-05-28T15:13:38,496Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-05-28T15:13:38,496Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1590678817852) {}
[INFO ] 2020-05-28T15:13:38,496Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-05-28T15:13:38,503Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200528-151319.361/nodes/1/cordapps] {}
[INFO ] 2020-05-28T15:13:38,503Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-151319.361/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-151319.361/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-05-28T15:13:38,503Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-151319.361/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2020-05-28T15:13:38,508Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-151319.361/nodes/1/cordapps/workflows-0.1.jar {}
[INFO ] 2020-05-28T15:13:38,525Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-05-28T15:13:38,526Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-05-28T15:13:38,542Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.PingFlow to initiate com.template.flows.PongFlow (version 1) {}
[INFO ] 2020-05-28T15:13:38,543Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-05-28T15:13:19.299Z
      epoch=1
  } {}
[INFO ] 2020-05-28T15:13:39,031Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:13:39,033Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200528-151319.361/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:13:39,033Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:13:39,051Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:13:39,053Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:13:39,053Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:13:39,243Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:13:39,255Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:13:39,256Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:13:39,258Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:13:39,258Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:13:39,356Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:13:39,365Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-05-28T15:13:39,368Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-05-28T15:13:39,368Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-05-28T15:13:39,464Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-05-28T15:13:39,465Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-05-28T15:13:39,479Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-05-28T15:13:39,480Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1590678819479) {}
[INFO ] 2020-05-28T15:13:39,481Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-05-28T15:13:39,486Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1590678819479) {}
[INFO ] 2020-05-28T15:13:39,492Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-05-28T15:13:39,494Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1590678819479) {}
[INFO ] 2020-05-28T15:13:39,498Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-05-28T15:13:39,516Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=B2C9B7C7C84DFEEBAF96CF39D6ADEC6A4188134F9DEC3E321B082797B8B7287F uploader=app filename=Template CorDapp {}
[INFO ] 2020-05-28T15:13:39,523Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1590678819479) {}
[INFO ] 2020-05-28T15:13:39,526Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1590678817852) {}
[INFO ] 2020-05-28T15:13:39,527Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-05-28T15:13:39,536Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1590678819479) {}
[INFO ] 2020-05-28T15:13:39,538Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-05-28T15:13:39,546Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1590678819479) {}
[INFO ] 2020-05-28T15:13:39,546Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-05-28T15:13:39,547Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1590678819479) {}
[INFO ] 2020-05-28T15:13:39,547Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2020-05-28T15:13:52,143Z [Mock node 1 thread] statemachine.SingleThreadedStateMachineManager. - Unhandled event SoftShutdown due to flow shutting down {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=3814307c-3b30-4f86-a3e9-1b5601e76a68, invocation_id=07004204-cda7-4c2d-9a0a-cd252cd4bc22, invocation_timestamp=2020-05-28T15:13:39.574Z, origin=Only For Testing, session_id=07004204-cda7-4c2d-9a0a-cd252cd4bc22, session_timestamp=2020-05-28T15:13:39.574Z, thread-id=253}
[INFO ] 2020-05-28T15:19:12,762Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/irynatsimashenka/corda/cordapp-template-java/workflows ... {}
[INFO ] 2020-05-28T15:19:12,908Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-05-28T15:19:13,763Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-05-28T15:19:14,439Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2020-05-28T15:19:14,450Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-05-28T15:19:14,451Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-05-28T15:19:14,873Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-05-28T15:19:14,893Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2020-05-28T15:19:15,267Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-05-28T15:19:15,277Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-05-28T15:19:15,277Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2020-05-28T15:19:15,412Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-05-28T15:19:15,430Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-05-28T15:19:15,843Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2020-05-28T15:19:16,021Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-05-28T15:19:16,021Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-05-28T15:19:16,042Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-05-28T15:19:16,042Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-05-28T15:19:16,042Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-05-28T15:19:16,642Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-05-28T15:19:16,642Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-05-28T15:19:16,720Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-05-28T15:19:16,721Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts {}
[INFO ] 2020-05-28T15:19:16,752Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-05-28T15:19:16,752Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows {}
[INFO ] 2020-05-28T15:19:16,784Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-05-28T15:19:16,784Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-05-28T15:19:16,850Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T15:19:16,873Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-05-28T15:19:16,919Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:compileClasspath {}
[INFO ] 2020-05-28T15:19:16,954Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-05-28T15:19:16,954Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2020-05-28T15:19:16,965Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-05-28T15:19:16,976Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:annotationProcessor {}
[INFO ] 2020-05-28T15:19:16,976Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-05-28T15:19:16,998Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T15:19:16,998Z [Connection worker] internal.TestCordappImpl. - Task :contracts:processResources {}
[INFO ] 2020-05-28T15:19:16,998Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T15:19:16,998Z [Connection worker] internal.TestCordappImpl. - Task :contracts:classes {}
[INFO ] 2020-05-28T15:19:16,998Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T15:19:16,998Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-05-28T15:19:17,021Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:runtime {}
[INFO ] 2020-05-28T15:19:17,051Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-05-28T15:19:17,051Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-05-28T15:19:17,051Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-05-28T15:19:17,051Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-05-28T15:19:17,051Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-05-28T15:19:17,051Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-05-28T15:19:17,061Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-05-28T15:19:17,061Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T15:19:17,061Z [Connection worker] internal.TestCordappImpl. - Task :contracts:jar {}
[INFO ] 2020-05-28T15:19:17,072Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T15:19:17,072Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-05-28T15:19:17,082Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:compileClasspath {}
[INFO ] 2020-05-28T15:19:17,103Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-05-28T15:19:17,103Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2020-05-28T15:19:17,103Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-05-28T15:19:17,103Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:annotationProcessor {}
[INFO ] 2020-05-28T15:19:17,103Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-05-28T15:19:17,103Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T15:19:17,103Z [Connection worker] internal.TestCordappImpl. - Task :workflows:processResources {}
[INFO ] 2020-05-28T15:19:17,113Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T15:19:17,113Z [Connection worker] internal.TestCordappImpl. - Task :workflows:classes {}
[INFO ] 2020-05-28T15:19:17,113Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T15:19:17,113Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-05-28T15:19:17,113Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:runtime {}
[INFO ] 2020-05-28T15:19:17,135Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-05-28T15:19:17,135Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-05-28T15:19:17,146Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-05-28T15:19:17,146Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-05-28T15:19:17,146Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-05-28T15:19:17,146Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-05-28T15:19:17,146Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-05-28T15:19:17,147Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-05-28T15:19:17,147Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-05-28T15:19:17,147Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T15:19:17,147Z [Connection worker] internal.TestCordappImpl. - Task :workflows:jar {}
[INFO ] 2020-05-28T15:19:18,659Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T15:19:18,659Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-05-28T15:19:18,659Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows' {}
[INFO ] 2020-05-28T15:19:18,659Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-05-28T15:19:18,672Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-05-28T15:19:18,672Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/irynatsimashenka/corda/cordapp-template-java/.gradle {}
[INFO ] 2020-05-28T15:19:18,672Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-05-28T15:19:18,694Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2020-05-28T15:19:18,807Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200528-151908.603/nodes/0/cordapps] {}
[INFO ] 2020-05-28T15:19:18,811Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-151908.603/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-151908.603/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-05-28T15:19:18,815Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-151908.603/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2020-05-28T15:19:18,884Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-151908.603/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2020-05-28T15:19:19,400Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-05-28T15:19:19,432Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-05-28T15:19:19,478Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.PingFlow to initiate com.template.flows.PongFlow (version 1) {}
[INFO ] 2020-05-28T15:19:19,916Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-05-28T15:19:08.559Z
      epoch=1
  } {}
[INFO ] 2020-05-28T15:19:22,837Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:19:22,840Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200528-151908.603/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:19:22,840Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:19:22,865Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:19:22,917Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:19:22,920Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:19:24,442Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:19:24,897Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:19:24,898Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:19:24,901Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:19:24,901Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:19:24,967Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:19:24,997Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-05-28T15:19:25,011Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-05-28T15:19:25,011Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-05-28T15:19:25,169Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-05-28T15:19:25,175Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-05-28T15:19:25,175Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1590679165175) {}
[INFO ] 2020-05-28T15:19:25,179Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-05-28T15:19:25,287Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1590679165175) {}
[INFO ] 2020-05-28T15:19:25,326Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-05-28T15:19:25,345Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1590679165175) {}
[INFO ] 2020-05-28T15:19:25,369Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-05-28T15:19:25,392Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=B2C9B7C7C84DFEEBAF96CF39D6ADEC6A4188134F9DEC3E321B082797B8B7287F uploader=app filename=Template CorDapp {}
[INFO ] 2020-05-28T15:19:25,396Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-05-28T15:19:25,399Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-05-28T15:19:25,688Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1590679165175) {}
[INFO ] 2020-05-28T15:19:25,708Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1590679165175) {}
[INFO ] 2020-05-28T15:19:25,709Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-05-28T15:19:25,709Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1590679165175) {}
[INFO ] 2020-05-28T15:19:25,709Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-05-28T15:19:25,716Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200528-151908.603/nodes/1/cordapps] {}
[INFO ] 2020-05-28T15:19:25,716Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-151908.603/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-151908.603/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-05-28T15:19:25,717Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-151908.603/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2020-05-28T15:19:25,721Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-151908.603/nodes/1/cordapps/workflows-0.1.jar {}
[INFO ] 2020-05-28T15:19:25,737Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-05-28T15:19:25,738Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-05-28T15:19:25,761Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.PingFlow to initiate com.template.flows.PongFlow (version 1) {}
[INFO ] 2020-05-28T15:19:25,763Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-05-28T15:19:08.559Z
      epoch=1
  } {}
[INFO ] 2020-05-28T15:19:26,274Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:19:26,277Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200528-151908.603/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:19:26,277Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:19:26,315Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:19:26,318Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:19:26,318Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:19:26,498Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:19:26,508Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:19:26,510Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:19:26,512Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:19:26,512Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:19:26,636Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:19:26,641Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-05-28T15:19:26,643Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-05-28T15:19:26,643Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-05-28T15:19:26,764Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-05-28T15:19:26,766Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-05-28T15:19:26,791Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-05-28T15:19:26,791Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1590679166791) {}
[INFO ] 2020-05-28T15:19:26,796Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-05-28T15:19:26,804Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1590679166791) {}
[INFO ] 2020-05-28T15:19:26,816Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-05-28T15:19:26,819Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1590679166791) {}
[INFO ] 2020-05-28T15:19:26,823Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-05-28T15:19:26,844Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=B2C9B7C7C84DFEEBAF96CF39D6ADEC6A4188134F9DEC3E321B082797B8B7287F uploader=app filename=Template CorDapp {}
[INFO ] 2020-05-28T15:19:26,850Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1590679166791) {}
[INFO ] 2020-05-28T15:19:26,853Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1590679165175) {}
[INFO ] 2020-05-28T15:19:26,854Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-05-28T15:19:26,862Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1590679166791) {}
[INFO ] 2020-05-28T15:19:26,863Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-05-28T15:19:26,871Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1590679166791) {}
[INFO ] 2020-05-28T15:19:26,871Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-05-28T15:19:26,871Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1590679166791) {}
[INFO ] 2020-05-28T15:19:26,871Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-05-28T15:20:00,081Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/irynatsimashenka/corda/cordapp-template-java/workflows ... {}
[INFO ] 2020-05-28T15:20:00,255Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-05-28T15:20:01,093Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2020-05-28T15:20:01,110Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-05-28T15:20:01,145Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-05-28T15:20:01,145Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2020-05-28T15:20:01,145Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-05-28T15:20:01,145Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-05-28T15:20:01,145Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2020-05-28T15:20:01,145Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-05-28T15:20:01,145Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-05-28T15:20:01,155Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2020-05-28T15:20:01,176Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-05-28T15:20:01,176Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-05-28T15:20:01,186Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-05-28T15:20:01,186Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-05-28T15:20:01,187Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-05-28T15:20:01,229Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-05-28T15:20:01,229Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-05-28T15:20:01,229Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-05-28T15:20:01,229Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts {}
[INFO ] 2020-05-28T15:20:01,241Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-05-28T15:20:01,241Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows {}
[INFO ] 2020-05-28T15:20:01,241Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-05-28T15:20:01,241Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-05-28T15:20:01,262Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T15:20:01,262Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-05-28T15:20:01,274Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:compileClasspath {}
[INFO ] 2020-05-28T15:20:01,294Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-05-28T15:20:01,294Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2020-05-28T15:20:01,294Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-05-28T15:20:01,305Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:annotationProcessor {}
[INFO ] 2020-05-28T15:20:01,305Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-05-28T15:20:01,305Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T15:20:01,305Z [Connection worker] internal.TestCordappImpl. - Task :contracts:processResources {}
[INFO ] 2020-05-28T15:20:01,305Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T15:20:01,305Z [Connection worker] internal.TestCordappImpl. - Task :contracts:classes {}
[INFO ] 2020-05-28T15:20:01,305Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T15:20:01,305Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-05-28T15:20:01,305Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:runtime {}
[INFO ] 2020-05-28T15:20:01,325Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-05-28T15:20:01,325Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-05-28T15:20:01,335Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-05-28T15:20:01,335Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-05-28T15:20:01,335Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-05-28T15:20:01,335Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-05-28T15:20:01,336Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-05-28T15:20:01,336Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T15:20:01,336Z [Connection worker] internal.TestCordappImpl. - Task :contracts:jar {}
[INFO ] 2020-05-28T15:20:01,336Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T15:20:01,336Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-05-28T15:20:01,346Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:compileClasspath {}
[INFO ] 2020-05-28T15:20:01,356Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-05-28T15:20:01,356Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2020-05-28T15:20:01,356Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-05-28T15:20:01,356Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:annotationProcessor {}
[INFO ] 2020-05-28T15:20:01,356Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-05-28T15:20:01,357Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T15:20:01,357Z [Connection worker] internal.TestCordappImpl. - Task :workflows:processResources {}
[INFO ] 2020-05-28T15:20:01,367Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T15:20:01,367Z [Connection worker] internal.TestCordappImpl. - Task :workflows:classes {}
[INFO ] 2020-05-28T15:20:01,367Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T15:20:01,367Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-05-28T15:20:01,367Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:runtime {}
[INFO ] 2020-05-28T15:20:01,388Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-05-28T15:20:01,388Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-05-28T15:20:01,389Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-05-28T15:20:01,389Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-05-28T15:20:01,389Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-05-28T15:20:01,389Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-05-28T15:20:01,389Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-05-28T15:20:01,389Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-05-28T15:20:01,389Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-05-28T15:20:01,389Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T15:20:01,389Z [Connection worker] internal.TestCordappImpl. - Task :workflows:jar {}
[INFO ] 2020-05-28T15:20:02,741Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T15:20:02,741Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-05-28T15:20:02,741Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows' {}
[INFO ] 2020-05-28T15:20:02,741Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-05-28T15:20:02,743Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-05-28T15:20:02,754Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/irynatsimashenka/corda/cordapp-template-java/.gradle {}
[INFO ] 2020-05-28T15:20:02,754Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-05-28T15:20:02,778Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2020-05-28T15:20:02,891Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200528-151955.899/nodes/0/cordapps] {}
[INFO ] 2020-05-28T15:20:02,895Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-151955.899/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-151955.899/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-05-28T15:20:02,900Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-151955.899/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2020-05-28T15:20:02,972Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-151955.899/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2020-05-28T15:20:03,515Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-05-28T15:20:03,541Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-05-28T15:20:03,583Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.PingFlow to initiate com.template.flows.PongFlow (version 1) {}
[INFO ] 2020-05-28T15:20:03,689Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-05-28T15:19:55.855Z
      epoch=1
  } {}
[INFO ] 2020-05-28T15:20:06,919Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:20:06,923Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200528-151955.899/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:20:06,923Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:20:06,955Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:20:06,999Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:20:07,002Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:20:08,502Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:20:08,969Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:20:08,971Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:20:08,973Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:20:08,973Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:20:09,032Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:20:09,061Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-05-28T15:20:09,080Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-05-28T15:20:09,080Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-05-28T15:20:09,246Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-05-28T15:20:09,252Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-05-28T15:20:09,252Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1590679209252) {}
[INFO ] 2020-05-28T15:20:09,255Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-05-28T15:20:09,370Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1590679209252) {}
[INFO ] 2020-05-28T15:20:09,409Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-05-28T15:20:09,423Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1590679209252) {}
[INFO ] 2020-05-28T15:20:09,441Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-05-28T15:20:09,467Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=B2C9B7C7C84DFEEBAF96CF39D6ADEC6A4188134F9DEC3E321B082797B8B7287F uploader=app filename=Template CorDapp {}
[INFO ] 2020-05-28T15:20:09,472Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-05-28T15:20:09,474Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-05-28T15:20:09,773Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1590679209252) {}
[INFO ] 2020-05-28T15:20:09,793Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1590679209252) {}
[INFO ] 2020-05-28T15:20:09,794Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-05-28T15:20:09,794Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1590679209252) {}
[INFO ] 2020-05-28T15:20:09,794Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-05-28T15:20:09,801Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200528-151955.899/nodes/1/cordapps] {}
[INFO ] 2020-05-28T15:20:09,801Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-151955.899/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-151955.899/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-05-28T15:20:09,801Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-151955.899/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2020-05-28T15:20:09,805Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-151955.899/nodes/1/cordapps/workflows-0.1.jar {}
[INFO ] 2020-05-28T15:20:09,824Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-05-28T15:20:09,825Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-05-28T15:20:09,842Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.PingFlow to initiate com.template.flows.PongFlow (version 1) {}
[INFO ] 2020-05-28T15:20:09,844Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-05-28T15:19:55.855Z
      epoch=1
  } {}
[INFO ] 2020-05-28T15:20:10,318Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:20:10,320Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200528-151955.899/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:20:10,320Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:20:10,344Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:20:10,346Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:20:10,346Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:20:10,504Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:20:10,513Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:20:10,514Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:20:10,516Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:20:10,516Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:20:10,582Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:20:10,590Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-05-28T15:20:10,593Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-05-28T15:20:10,593Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-05-28T15:20:10,726Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-05-28T15:20:10,728Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-05-28T15:20:10,755Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-05-28T15:20:10,755Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1590679210755) {}
[INFO ] 2020-05-28T15:20:10,757Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-05-28T15:20:10,769Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1590679210755) {}
[INFO ] 2020-05-28T15:20:10,780Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-05-28T15:20:10,784Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1590679210755) {}
[INFO ] 2020-05-28T15:20:10,793Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-05-28T15:20:10,821Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=B2C9B7C7C84DFEEBAF96CF39D6ADEC6A4188134F9DEC3E321B082797B8B7287F uploader=app filename=Template CorDapp {}
[INFO ] 2020-05-28T15:20:10,838Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1590679210755) {}
[INFO ] 2020-05-28T15:20:10,845Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1590679209252) {}
[INFO ] 2020-05-28T15:20:10,850Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-05-28T15:20:10,862Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1590679210755) {}
[INFO ] 2020-05-28T15:20:10,863Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-05-28T15:20:10,873Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1590679210755) {}
[INFO ] 2020-05-28T15:20:10,873Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-05-28T15:20:10,873Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1590679210755) {}
[INFO ] 2020-05-28T15:20:10,873Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2020-05-28T15:20:23,550Z [Mock node 1 thread] statemachine.SingleThreadedStateMachineManager. - Unhandled event SoftShutdown due to flow shutting down {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=1866eae2-6ecd-4b5d-b46e-5adc0fac7f30, invocation_id=f25082d0-b6c3-4f2b-8e15-22f82c34be75, invocation_timestamp=2020-05-28T15:20:10.896Z, origin=Only For Testing, session_id=f25082d0-b6c3-4f2b-8e15-22f82c34be75, session_timestamp=2020-05-28T15:20:10.896Z, thread-id=248}
[INFO ] 2020-05-28T15:21:46,323Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/irynatsimashenka/corda/cordapp-template-java/workflows ... {}
[INFO ] 2020-05-28T15:21:46,497Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-05-28T15:21:47,492Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-05-28T15:21:48,187Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2020-05-28T15:21:48,202Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-05-28T15:21:48,203Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-05-28T15:21:48,648Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-05-28T15:21:48,659Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2020-05-28T15:21:49,056Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-05-28T15:21:49,056Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-05-28T15:21:49,056Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2020-05-28T15:21:49,179Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-05-28T15:21:49,190Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-05-28T15:21:49,598Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2020-05-28T15:21:49,767Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-05-28T15:21:49,777Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-05-28T15:21:49,788Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-05-28T15:21:49,788Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-05-28T15:21:49,788Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-05-28T15:21:50,374Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-05-28T15:21:50,374Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-05-28T15:21:50,453Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-05-28T15:21:50,453Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts {}
[INFO ] 2020-05-28T15:21:50,465Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-05-28T15:21:50,465Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows {}
[INFO ] 2020-05-28T15:21:50,502Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-05-28T15:21:50,502Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-05-28T15:21:50,580Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T15:21:50,592Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-05-28T15:21:50,637Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:compileClasspath {}
[INFO ] 2020-05-28T15:21:50,677Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-05-28T15:21:50,677Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2020-05-28T15:21:50,677Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-05-28T15:21:50,698Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:annotationProcessor {}
[INFO ] 2020-05-28T15:21:50,698Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-05-28T15:21:50,708Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T15:21:50,708Z [Connection worker] internal.TestCordappImpl. - Task :contracts:processResources {}
[INFO ] 2020-05-28T15:21:50,708Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T15:21:50,708Z [Connection worker] internal.TestCordappImpl. - Task :contracts:classes {}
[INFO ] 2020-05-28T15:21:50,708Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T15:21:50,708Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-05-28T15:21:50,732Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:runtime {}
[INFO ] 2020-05-28T15:21:50,765Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-05-28T15:21:50,766Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-05-28T15:21:50,776Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-05-28T15:21:50,776Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-05-28T15:21:50,776Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-05-28T15:21:50,776Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-05-28T15:21:50,776Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-05-28T15:21:50,776Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T15:21:50,789Z [Connection worker] internal.TestCordappImpl. - Task :contracts:jar {}
[INFO ] 2020-05-28T15:21:50,789Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T15:21:50,800Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-05-28T15:21:50,800Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:compileClasspath {}
[INFO ] 2020-05-28T15:21:50,820Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-05-28T15:21:50,820Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2020-05-28T15:21:50,821Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-05-28T15:21:50,821Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:annotationProcessor {}
[INFO ] 2020-05-28T15:21:50,821Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-05-28T15:21:50,833Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T15:21:50,833Z [Connection worker] internal.TestCordappImpl. - Task :workflows:processResources {}
[INFO ] 2020-05-28T15:21:50,833Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T15:21:50,833Z [Connection worker] internal.TestCordappImpl. - Task :workflows:classes {}
[INFO ] 2020-05-28T15:21:50,833Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T15:21:50,835Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-05-28T15:21:50,835Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:runtime {}
[INFO ] 2020-05-28T15:21:50,855Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-05-28T15:21:50,855Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-05-28T15:21:50,866Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-05-28T15:21:50,866Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-05-28T15:21:50,866Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-05-28T15:21:50,866Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-05-28T15:21:50,866Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-05-28T15:21:50,867Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-05-28T15:21:50,867Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-05-28T15:21:50,867Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T15:21:50,867Z [Connection worker] internal.TestCordappImpl. - Task :workflows:jar {}
[INFO ] 2020-05-28T15:21:52,415Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T15:21:52,426Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-05-28T15:21:52,441Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows' {}
[INFO ] 2020-05-28T15:21:52,442Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-05-28T15:21:52,454Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-05-28T15:21:52,489Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/irynatsimashenka/corda/cordapp-template-java/.gradle {}
[INFO ] 2020-05-28T15:21:52,490Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-05-28T15:21:52,556Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2020-05-28T15:21:52,980Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200528-152142.036/nodes/0/cordapps] {}
[INFO ] 2020-05-28T15:21:52,988Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-152142.036/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-152142.036/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-05-28T15:21:53,003Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-152142.036/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2020-05-28T15:21:53,222Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-152142.036/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2020-05-28T15:21:53,977Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-05-28T15:21:54,006Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-05-28T15:21:54,052Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.PingFlow to initiate com.template.flows.PongFlow (version 1) {}
[INFO ] 2020-05-28T15:21:54,493Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-05-28T15:21:41.983Z
      epoch=1
  } {}
[INFO ] 2020-05-28T15:21:57,923Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:21:57,927Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200528-152142.036/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:21:57,927Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:21:57,951Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:21:58,006Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:21:58,012Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:21:59,534Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:21:59,997Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:22:00,000Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:22:00,004Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:22:00,004Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:22:00,061Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:22:00,097Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-05-28T15:22:00,111Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-05-28T15:22:00,111Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-05-28T15:22:00,273Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-05-28T15:22:00,278Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-05-28T15:22:00,279Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1590679320278) {}
[INFO ] 2020-05-28T15:22:00,282Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-05-28T15:22:00,387Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1590679320278) {}
[INFO ] 2020-05-28T15:22:00,430Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-05-28T15:22:00,443Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1590679320278) {}
[INFO ] 2020-05-28T15:22:00,472Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-05-28T15:22:00,495Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=B2C9B7C7C84DFEEBAF96CF39D6ADEC6A4188134F9DEC3E321B082797B8B7287F uploader=app filename=Template CorDapp {}
[INFO ] 2020-05-28T15:22:00,500Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-05-28T15:22:00,502Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-05-28T15:22:00,793Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1590679320278) {}
[INFO ] 2020-05-28T15:22:00,815Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1590679320278) {}
[INFO ] 2020-05-28T15:22:00,816Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-05-28T15:22:00,816Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1590679320278) {}
[INFO ] 2020-05-28T15:22:00,817Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-05-28T15:22:00,824Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200528-152142.036/nodes/1/cordapps] {}
[INFO ] 2020-05-28T15:22:00,824Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-152142.036/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-152142.036/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-05-28T15:22:00,824Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-152142.036/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2020-05-28T15:22:00,828Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-152142.036/nodes/1/cordapps/workflows-0.1.jar {}
[INFO ] 2020-05-28T15:22:00,845Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-05-28T15:22:00,846Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-05-28T15:22:00,867Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.PingFlow to initiate com.template.flows.PongFlow (version 1) {}
[INFO ] 2020-05-28T15:22:00,869Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-05-28T15:21:41.983Z
      epoch=1
  } {}
[INFO ] 2020-05-28T15:22:01,356Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:22:01,357Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200528-152142.036/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:22:01,357Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:22:01,375Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:22:01,377Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:22:01,377Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:22:01,572Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:22:01,584Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:22:01,585Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:22:01,587Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:22:01,587Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:22:01,689Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:22:01,700Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-05-28T15:22:01,704Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-05-28T15:22:01,704Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-05-28T15:22:01,805Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-05-28T15:22:01,806Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-05-28T15:22:01,837Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-05-28T15:22:01,837Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1590679321837) {}
[INFO ] 2020-05-28T15:22:01,841Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-05-28T15:22:01,851Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1590679321837) {}
[INFO ] 2020-05-28T15:22:01,861Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-05-28T15:22:01,865Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1590679321837) {}
[INFO ] 2020-05-28T15:22:01,874Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-05-28T15:22:01,907Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=B2C9B7C7C84DFEEBAF96CF39D6ADEC6A4188134F9DEC3E321B082797B8B7287F uploader=app filename=Template CorDapp {}
[INFO ] 2020-05-28T15:22:01,916Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1590679321837) {}
[INFO ] 2020-05-28T15:22:01,919Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1590679320278) {}
[INFO ] 2020-05-28T15:22:01,920Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-05-28T15:22:01,929Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1590679321837) {}
[INFO ] 2020-05-28T15:22:01,930Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-05-28T15:22:01,937Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1590679321837) {}
[INFO ] 2020-05-28T15:22:01,938Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-05-28T15:22:01,938Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1590679321837) {}
[INFO ] 2020-05-28T15:22:01,938Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-05-28T15:30:41,985Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/irynatsimashenka/corda/cordapp-template-java/workflows ... {}
[INFO ] 2020-05-28T15:30:42,187Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-05-28T15:30:43,768Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-05-28T15:30:44,470Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2020-05-28T15:30:44,481Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-05-28T15:30:44,482Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-05-28T15:30:44,928Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-05-28T15:30:44,954Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2020-05-28T15:30:45,343Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-05-28T15:30:45,344Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-05-28T15:30:45,356Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2020-05-28T15:30:45,491Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-05-28T15:30:45,504Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-05-28T15:30:46,382Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2020-05-28T15:30:47,104Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-05-28T15:30:47,115Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-05-28T15:30:47,128Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-05-28T15:30:47,129Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-05-28T15:30:47,129Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-05-28T15:30:47,751Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-05-28T15:30:47,751Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-05-28T15:30:47,848Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-05-28T15:30:47,848Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts {}
[INFO ] 2020-05-28T15:30:47,870Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-05-28T15:30:47,870Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows {}
[INFO ] 2020-05-28T15:30:47,913Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-05-28T15:30:47,913Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-05-28T15:30:48,009Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T15:30:48,029Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-05-28T15:30:48,084Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:compileClasspath {}
[INFO ] 2020-05-28T15:30:48,125Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-05-28T15:30:48,125Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2020-05-28T15:30:48,135Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-05-28T15:30:48,146Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:annotationProcessor {}
[INFO ] 2020-05-28T15:30:48,146Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-05-28T15:30:48,169Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T15:30:48,169Z [Connection worker] internal.TestCordappImpl. - Task :contracts:processResources {}
[INFO ] 2020-05-28T15:30:48,181Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T15:30:48,181Z [Connection worker] internal.TestCordappImpl. - Task :contracts:classes {}
[INFO ] 2020-05-28T15:30:48,181Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T15:30:48,181Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-05-28T15:30:48,202Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:runtime {}
[INFO ] 2020-05-28T15:30:48,236Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-05-28T15:30:48,236Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-05-28T15:30:48,247Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-05-28T15:30:48,247Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-05-28T15:30:48,247Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-05-28T15:30:48,247Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-05-28T15:30:48,248Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-05-28T15:30:48,248Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T15:30:48,248Z [Connection worker] internal.TestCordappImpl. - Task :contracts:jar {}
[INFO ] 2020-05-28T15:30:48,261Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T15:30:48,261Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-05-28T15:30:48,271Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:compileClasspath {}
[INFO ] 2020-05-28T15:30:48,305Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-05-28T15:30:48,305Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2020-05-28T15:30:48,305Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-05-28T15:30:48,305Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:annotationProcessor {}
[INFO ] 2020-05-28T15:30:48,305Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-05-28T15:30:48,305Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T15:30:48,305Z [Connection worker] internal.TestCordappImpl. - Task :workflows:processResources {}
[INFO ] 2020-05-28T15:30:48,315Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T15:30:48,315Z [Connection worker] internal.TestCordappImpl. - Task :workflows:classes {}
[INFO ] 2020-05-28T15:30:48,315Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T15:30:48,315Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-05-28T15:30:48,315Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:runtime {}
[INFO ] 2020-05-28T15:30:48,336Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-05-28T15:30:48,336Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-05-28T15:30:48,347Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-05-28T15:30:48,347Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-05-28T15:30:48,347Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-05-28T15:30:48,347Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-05-28T15:30:48,347Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-05-28T15:30:48,347Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-05-28T15:30:48,347Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-05-28T15:30:48,347Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T15:30:48,347Z [Connection worker] internal.TestCordappImpl. - Task :workflows:jar {}
[INFO ] 2020-05-28T15:30:48,357Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T15:30:48,358Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-05-28T15:30:48,358Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows' {}
[INFO ] 2020-05-28T15:30:48,358Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-05-28T15:30:48,369Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-05-28T15:30:48,379Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/irynatsimashenka/corda/cordapp-template-java/.gradle {}
[INFO ] 2020-05-28T15:30:48,379Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-05-28T15:30:48,414Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2020-05-28T15:30:48,696Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200528-153036.024/nodes/0/cordapps] {}
[INFO ] 2020-05-28T15:30:48,701Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-153036.024/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-153036.024/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-05-28T15:30:48,707Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-153036.024/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2020-05-28T15:30:48,843Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-153036.024/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2020-05-28T15:30:50,363Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-05-28T15:30:50,394Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-05-28T15:30:50,440Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.PingFlow to initiate com.template.flows.PongFlow (version 1) {}
[INFO ] 2020-05-28T15:30:50,812Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-05-28T15:30:35.867Z
      epoch=1
  } {}
[INFO ] 2020-05-28T15:30:54,761Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:30:54,765Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200528-153036.024/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:30:54,765Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:30:54,811Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:30:54,864Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:30:54,869Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:30:56,974Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:30:57,437Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:30:57,438Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:30:57,441Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:30:57,441Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:30:57,504Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:30:57,537Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-05-28T15:30:57,550Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-05-28T15:30:57,550Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-05-28T15:30:57,715Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-05-28T15:30:57,721Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-05-28T15:30:57,721Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1590679857721) {}
[INFO ] 2020-05-28T15:30:57,724Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-05-28T15:30:57,842Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1590679857721) {}
[INFO ] 2020-05-28T15:30:57,886Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-05-28T15:30:57,906Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1590679857721) {}
[INFO ] 2020-05-28T15:30:57,925Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-05-28T15:30:57,950Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=B2C9B7C7C84DFEEBAF96CF39D6ADEC6A4188134F9DEC3E321B082797B8B7287F uploader=app filename=Template CorDapp {}
[INFO ] 2020-05-28T15:30:57,955Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-05-28T15:30:57,957Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-05-28T15:30:58,257Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1590679857721) {}
[INFO ] 2020-05-28T15:30:58,280Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1590679857721) {}
[INFO ] 2020-05-28T15:30:58,281Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-05-28T15:30:58,281Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1590679857721) {}
[INFO ] 2020-05-28T15:30:58,281Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-05-28T15:30:58,289Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200528-153036.024/nodes/1/cordapps] {}
[INFO ] 2020-05-28T15:30:58,289Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-153036.024/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-153036.024/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-05-28T15:30:58,289Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-153036.024/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2020-05-28T15:30:58,293Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-153036.024/nodes/1/cordapps/workflows-0.1.jar {}
[INFO ] 2020-05-28T15:30:58,310Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-05-28T15:30:58,310Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-05-28T15:30:58,333Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.PingFlow to initiate com.template.flows.PongFlow (version 1) {}
[INFO ] 2020-05-28T15:30:58,335Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-05-28T15:30:35.867Z
      epoch=1
  } {}
[INFO ] 2020-05-28T15:30:59,014Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:30:59,017Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200528-153036.024/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:30:59,017Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:30:59,040Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:30:59,042Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:30:59,042Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:30:59,243Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:30:59,254Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:30:59,256Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:30:59,257Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:30:59,257Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:30:59,302Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:30:59,307Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-05-28T15:30:59,309Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-05-28T15:30:59,309Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-05-28T15:30:59,511Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-05-28T15:30:59,512Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-05-28T15:30:59,528Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-05-28T15:30:59,528Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1590679859528) {}
[INFO ] 2020-05-28T15:30:59,530Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-05-28T15:30:59,536Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1590679859528) {}
[INFO ] 2020-05-28T15:30:59,546Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-05-28T15:30:59,550Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1590679859528) {}
[INFO ] 2020-05-28T15:30:59,559Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-05-28T15:30:59,597Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=B2C9B7C7C84DFEEBAF96CF39D6ADEC6A4188134F9DEC3E321B082797B8B7287F uploader=app filename=Template CorDapp {}
[INFO ] 2020-05-28T15:30:59,618Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1590679859528) {}
[INFO ] 2020-05-28T15:30:59,627Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1590679857721) {}
[INFO ] 2020-05-28T15:30:59,632Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-05-28T15:30:59,657Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1590679859528) {}
[INFO ] 2020-05-28T15:30:59,659Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-05-28T15:30:59,671Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1590679859528) {}
[INFO ] 2020-05-28T15:30:59,671Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-05-28T15:30:59,672Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1590679859528) {}
[INFO ] 2020-05-28T15:30:59,672Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-05-28T15:31:37,281Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/irynatsimashenka/corda/cordapp-template-java/workflows ... {}
[INFO ] 2020-05-28T15:31:37,455Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-05-28T15:31:38,453Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2020-05-28T15:31:38,475Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-05-28T15:31:38,505Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-05-28T15:31:38,506Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2020-05-28T15:31:38,506Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-05-28T15:31:38,506Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-05-28T15:31:38,506Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2020-05-28T15:31:38,513Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-05-28T15:31:38,513Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-05-28T15:31:38,524Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2020-05-28T15:31:38,534Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-05-28T15:31:38,534Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-05-28T15:31:38,544Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-05-28T15:31:38,544Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-05-28T15:31:38,545Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-05-28T15:31:38,608Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-05-28T15:31:38,609Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-05-28T15:31:38,619Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-05-28T15:31:38,619Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts {}
[INFO ] 2020-05-28T15:31:38,619Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-05-28T15:31:38,619Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows {}
[INFO ] 2020-05-28T15:31:38,642Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-05-28T15:31:38,642Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-05-28T15:31:38,664Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T15:31:38,664Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-05-28T15:31:38,664Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:compileClasspath {}
[INFO ] 2020-05-28T15:31:38,687Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-05-28T15:31:38,687Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2020-05-28T15:31:38,687Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-05-28T15:31:38,698Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:annotationProcessor {}
[INFO ] 2020-05-28T15:31:38,698Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-05-28T15:31:38,698Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T15:31:38,698Z [Connection worker] internal.TestCordappImpl. - Task :contracts:processResources {}
[INFO ] 2020-05-28T15:31:38,698Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T15:31:38,698Z [Connection worker] internal.TestCordappImpl. - Task :contracts:classes {}
[INFO ] 2020-05-28T15:31:38,698Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T15:31:38,698Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-05-28T15:31:38,698Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:runtime {}
[INFO ] 2020-05-28T15:31:38,720Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-05-28T15:31:38,720Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-05-28T15:31:38,744Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-05-28T15:31:38,744Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-05-28T15:31:38,744Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-05-28T15:31:38,744Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-05-28T15:31:38,744Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-05-28T15:31:38,744Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T15:31:38,744Z [Connection worker] internal.TestCordappImpl. - Task :contracts:jar {}
[INFO ] 2020-05-28T15:31:38,760Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T15:31:38,761Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-05-28T15:31:38,761Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:compileClasspath {}
[INFO ] 2020-05-28T15:31:38,767Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-05-28T15:31:38,767Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2020-05-28T15:31:38,777Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-05-28T15:31:38,777Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:annotationProcessor {}
[INFO ] 2020-05-28T15:31:38,777Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-05-28T15:31:38,777Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T15:31:38,777Z [Connection worker] internal.TestCordappImpl. - Task :workflows:processResources {}
[INFO ] 2020-05-28T15:31:38,778Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T15:31:38,778Z [Connection worker] internal.TestCordappImpl. - Task :workflows:classes {}
[INFO ] 2020-05-28T15:31:38,778Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T15:31:38,778Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-05-28T15:31:38,778Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:runtime {}
[INFO ] 2020-05-28T15:31:38,788Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-05-28T15:31:38,788Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-05-28T15:31:38,801Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-05-28T15:31:38,801Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-05-28T15:31:38,801Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-05-28T15:31:38,801Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-05-28T15:31:38,801Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-05-28T15:31:38,801Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-05-28T15:31:38,801Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-05-28T15:31:38,801Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T15:31:38,801Z [Connection worker] internal.TestCordappImpl. - Task :workflows:jar {}
[INFO ] 2020-05-28T15:31:40,240Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-05-28T15:31:40,240Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-05-28T15:31:40,240Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows' {}
[INFO ] 2020-05-28T15:31:40,240Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-05-28T15:31:40,242Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-05-28T15:31:40,253Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/irynatsimashenka/corda/cordapp-template-java/.gradle {}
[INFO ] 2020-05-28T15:31:40,253Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-05-28T15:31:40,264Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2020-05-28T15:31:40,378Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200528-153132.746/nodes/0/cordapps] {}
[INFO ] 2020-05-28T15:31:40,382Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-153132.746/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-153132.746/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-05-28T15:31:40,387Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-153132.746/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2020-05-28T15:31:40,464Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-153132.746/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2020-05-28T15:31:41,019Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-05-28T15:31:41,045Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-05-28T15:31:41,091Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.PingFlow to initiate com.template.flows.PongFlow (version 1) {}
[INFO ] 2020-05-28T15:31:41,197Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-05-28T15:31:32.693Z
      epoch=1
  } {}
[INFO ] 2020-05-28T15:31:44,514Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:31:44,517Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200528-153132.746/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:31:44,517Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:31:44,547Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:31:44,614Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:31:44,617Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:31:46,110Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:31:46,596Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:31:46,598Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:31:46,601Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:31:46,601Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:31:46,657Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:31:46,687Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-05-28T15:31:46,704Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-05-28T15:31:46,704Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-05-28T15:31:46,871Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-05-28T15:31:46,876Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-05-28T15:31:46,876Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1590679906876) {}
[INFO ] 2020-05-28T15:31:46,879Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-05-28T15:31:46,995Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1590679906876) {}
[INFO ] 2020-05-28T15:31:47,041Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-05-28T15:31:47,058Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1590679906876) {}
[INFO ] 2020-05-28T15:31:47,096Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-05-28T15:31:47,134Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=B2C9B7C7C84DFEEBAF96CF39D6ADEC6A4188134F9DEC3E321B082797B8B7287F uploader=app filename=Template CorDapp {}
[INFO ] 2020-05-28T15:31:47,144Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-05-28T15:31:47,149Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-05-28T15:31:47,533Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1590679906876) {}
[INFO ] 2020-05-28T15:31:47,567Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1590679906876) {}
[INFO ] 2020-05-28T15:31:47,571Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-05-28T15:31:47,572Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1590679906876) {}
[INFO ] 2020-05-28T15:31:47,572Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-05-28T15:31:47,589Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200528-153132.746/nodes/1/cordapps] {}
[INFO ] 2020-05-28T15:31:47,589Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-153132.746/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-153132.746/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-05-28T15:31:47,589Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-153132.746/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2020-05-28T15:31:47,605Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/irynatsimashenka/corda/cordapp-template-java/workflows/build/mock-network/20200528-153132.746/nodes/1/cordapps/workflows-0.1.jar {}
[INFO ] 2020-05-28T15:31:47,648Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-05-28T15:31:47,651Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-05-28T15:31:47,695Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.PingFlow to initiate com.template.flows.PongFlow (version 1) {}
[INFO ] 2020-05-28T15:31:47,699Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-05-28T15:31:32.693Z
      epoch=1
  } {}
[INFO ] 2020-05-28T15:31:48,965Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:31:48,968Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200528-153132.746/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:31:48,968Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:31:49,041Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:31:49,045Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:31:49,045Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:31:49,425Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:31:49,458Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:31:49,459Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:31:49,467Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:31:49,467Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:31:49,690Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-05-28T15:31:49,718Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-05-28T15:31:49,727Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-05-28T15:31:49,727Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-05-28T15:31:50,161Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-05-28T15:31:50,163Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-05-28T15:31:50,182Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-05-28T15:31:50,182Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1590679910182) {}
[INFO ] 2020-05-28T15:31:50,184Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-05-28T15:31:50,194Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1590679910182) {}
[INFO ] 2020-05-28T15:31:50,202Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-05-28T15:31:50,208Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1590679910182) {}
[INFO ] 2020-05-28T15:31:50,211Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-05-28T15:31:50,245Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=B2C9B7C7C84DFEEBAF96CF39D6ADEC6A4188134F9DEC3E321B082797B8B7287F uploader=app filename=Template CorDapp {}
[INFO ] 2020-05-28T15:31:50,256Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1590679910182) {}
[INFO ] 2020-05-28T15:31:50,260Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1590679906876) {}
[INFO ] 2020-05-28T15:31:50,261Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-05-28T15:31:50,272Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1590679910182) {}
[INFO ] 2020-05-28T15:31:50,273Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-05-28T15:31:50,288Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1590679910182) {}
[INFO ] 2020-05-28T15:31:50,289Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-05-28T15:31:50,290Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1590679910182) {}
[INFO ] 2020-05-28T15:31:50,290Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
